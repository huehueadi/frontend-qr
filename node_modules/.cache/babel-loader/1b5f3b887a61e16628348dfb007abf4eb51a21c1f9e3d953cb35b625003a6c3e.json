{"ast":null,"code":"var _jsxFileName = \"/Users/muskanagarwal/Documents/qrFrontendTemplateStiched/src/components/pages/SlotUpdate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlotUpdate = () => {\n  _s();\n  const [slotId, setSlotId] = useState(''); // State to store selected Slot ID\n  const [qrId, setQrId] = useState(''); // State to store selected QR ID\n  const [date, setDate] = useState(''); // State for date\n  const [slotTime, setSlotTime] = useState(''); // State for slot time\n  const [endTime, setEndTime] = useState(''); // State for end time\n  const [redirectUrl, setRedirectUrl] = useState(''); // State for redirect URL\n  const [brandNames, setBrandNames] = useState([]); // State for storing fetched brand names\n  const [qrIds, setQrIds] = useState([]); // State for storing fetched QR IDs\n  const [selectedBrandName, setSelectedBrandName] = useState(''); // State for selected brand name\n\n  // Fetch QR IDs from backend\n  useEffect(() => {\n    const fetchQrIds = async () => {\n      try {\n        const response = await fetch('http://localhost:7000/api/get_qrs'); // API endpoint for QR IDs\n        const data = await response.json();\n        if (data.success && Array.isArray(data.Qrs)) {\n          setQrIds(data.Qrs); // Set qrIds state with the correct array from the 'Qrs' key\n        } else {\n          console.error('Invalid response format for QR IDs:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching QR IDs:', error);\n      }\n    };\n    fetchQrIds();\n  }, []);\n\n  // Fetch brand names from backend\n  useEffect(() => {\n    const fetchBrandNames = async () => {\n      try {\n        const response = await fetch('http://localhost:7000/api/get_brand');\n        const data = await response.json();\n        console.log('Fetched Brands:', data); // Debugging line\n\n        if (data.success && Array.isArray(data.Brands)) {\n          setBrandNames(data.Brands); // Set brand names if the response structure is correct\n        } else {\n          console.error(\"Error: Brands data is not in expected array format.\");\n        }\n      } catch (error) {\n        console.error('Error fetching brand names:', error);\n      }\n    };\n    fetchBrandNames();\n  }, []);\n\n  // Fetch the existing slot data to update\n  useEffect(() => {\n    const fetchSlotData = async () => {\n      try {\n        const response = await fetch(`http://localhost:7000/api/get_slot/${slotId}`);\n        const data = await response.json();\n        if (data.success) {\n          const {\n            qrCodeId,\n            date,\n            startTime,\n            endTime,\n            redirectionUrl,\n            brandId\n          } = data.slot;\n          setQrId(qrCodeId);\n          setDate(date);\n          setSlotTime(startTime);\n          setEndTime(endTime);\n          setRedirectUrl(redirectionUrl);\n          setSelectedBrandName(brandId);\n        } else {\n          console.error('Error fetching slot data:', data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching slot data:', error);\n      }\n    };\n    if (slotId) {\n      fetchSlotData();\n    }\n  }, [slotId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = {\n      qrId,\n      brandId: selectedBrandName,\n      date,\n      startTime: slotTime,\n      endTime,\n      redirectionUrl: redirectUrl\n    };\n    try {\n      const response = await fetch(`http://localhost:7000/api/update_slot/${slotId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Slot updated successfully!');\n      } else {\n        alert('Error updating slot. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error submitting the form:', error);\n      alert('Network error. Please try again!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-title-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Update Slot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleSubmit,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"slotId\",\n                      className: \"form-label\",\n                      children: \"Select Slot ID to Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      id: \"slotId\",\n                      className: \"form-select\",\n                      value: slotId,\n                      onChange: e => setSlotId(e.target.value),\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Slot ID\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"123\",\n                        children: \"Slot 123\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 150,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"124\",\n                        children: \"Slot 124\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"qrId\",\n                      className: \"form-label\",\n                      children: \"Select QR ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      id: \"qrId\",\n                      className: \"form-select\",\n                      value: qrId,\n                      onChange: e => setQrId(e.target.value),\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select QR ID\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 25\n                      }, this), qrIds.map(qr => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: qr.qrCodeId,\n                        children: qr.qrCodeId\n                      }, qr._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 27\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"brandName\",\n                      className: \"form-label\",\n                      children: \"Select Brand Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      id: \"brandName\",\n                      className: \"form-select\",\n                      value: selectedBrandName,\n                      onChange: e => setSelectedBrandName(e.target.value),\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Brand Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 25\n                      }, this), brandNames.map(brand => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: brand._id,\n                        children: brand.brandName\n                      }, brand._id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 27\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"date\",\n                      className: \"form-label\",\n                      children: \"Select Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"date\",\n                      id: \"date\",\n                      className: \"form-control\",\n                      value: date,\n                      onChange: e => setDate(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"slotTime\",\n                      className: \"form-label\",\n                      children: \"Select Slot Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"time\",\n                      id: \"slotTime\",\n                      className: \"form-control\",\n                      value: slotTime,\n                      onChange: e => setSlotTime(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"endTime\",\n                      className: \"form-label\",\n                      children: \"Select End Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"time\",\n                      id: \"endTime\",\n                      className: \"form-control\",\n                      value: endTime,\n                      onChange: e => setEndTime(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"redirectUrl\",\n                      className: \"form-label\",\n                      children: \"Redirect URL\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"url\",\n                      id: \"redirectUrl\",\n                      className: \"form-control\",\n                      value: redirectUrl,\n                      onChange: e => setRedirectUrl(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary\",\n                    children: \"Update Slot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(SlotUpdate, \"vK/U8Uv9oF2qB78Ss/be6B3TZ0k=\");\n_c = SlotUpdate;\nexport default SlotUpdate;\nvar _c;\n$RefreshReg$(_c, \"SlotUpdate\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SlotUpdate","_s","slotId","setSlotId","qrId","setQrId","date","setDate","slotTime","setSlotTime","endTime","setEndTime","redirectUrl","setRedirectUrl","brandNames","setBrandNames","qrIds","setQrIds","selectedBrandName","setSelectedBrandName","fetchQrIds","response","fetch","data","json","success","Array","isArray","Qrs","console","error","fetchBrandNames","log","Brands","fetchSlotData","qrCodeId","startTime","redirectionUrl","brandId","slot","message","handleSubmit","e","preventDefault","formData","method","headers","body","JSON","stringify","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","required","map","qr","_id","brand","brandName","type","_c","$RefreshReg$"],"sources":["/Users/muskanagarwal/Documents/qrFrontendTemplateStiched/src/components/pages/SlotUpdate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SlotUpdate = () => {\n  const [slotId, setSlotId] = useState(''); // State to store selected Slot ID\n  const [qrId, setQrId] = useState(''); // State to store selected QR ID\n  const [date, setDate] = useState(''); // State for date\n  const [slotTime, setSlotTime] = useState(''); // State for slot time\n  const [endTime, setEndTime] = useState(''); // State for end time\n  const [redirectUrl, setRedirectUrl] = useState(''); // State for redirect URL\n  const [brandNames, setBrandNames] = useState([]); // State for storing fetched brand names\n  const [qrIds, setQrIds] = useState([]); // State for storing fetched QR IDs\n  const [selectedBrandName, setSelectedBrandName] = useState(''); // State for selected brand name\n\n  // Fetch QR IDs from backend\n  useEffect(() => {\n    const fetchQrIds = async () => {\n      try {\n        const response = await fetch('http://localhost:7000/api/get_qrs'); // API endpoint for QR IDs\n        const data = await response.json();\n\n        if (data.success && Array.isArray(data.Qrs)) {\n          setQrIds(data.Qrs); // Set qrIds state with the correct array from the 'Qrs' key\n        } else {\n          console.error('Invalid response format for QR IDs:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching QR IDs:', error);\n      }\n    };\n\n    fetchQrIds();\n  }, []);\n\n  // Fetch brand names from backend\n  useEffect(() => {\n    const fetchBrandNames = async () => {\n      try {\n        const response = await fetch('http://localhost:7000/api/get_brand');\n        const data = await response.json();\n        console.log('Fetched Brands:', data); // Debugging line\n\n        if (data.success && Array.isArray(data.Brands)) {\n          setBrandNames(data.Brands); // Set brand names if the response structure is correct\n        } else {\n          console.error(\"Error: Brands data is not in expected array format.\");\n        }\n      } catch (error) {\n        console.error('Error fetching brand names:', error);\n      }\n    };\n\n    fetchBrandNames();\n  }, []);\n\n  // Fetch the existing slot data to update\n  useEffect(() => {\n    const fetchSlotData = async () => {\n      try {\n        const response = await fetch(`http://localhost:7000/api/get_slot/${slotId}`);\n        const data = await response.json();\n\n        if (data.success) {\n          const { qrCodeId, date, startTime, endTime, redirectionUrl, brandId } = data.slot;\n          setQrId(qrCodeId);\n          setDate(date);\n          setSlotTime(startTime);\n          setEndTime(endTime);\n          setRedirectUrl(redirectionUrl);\n          setSelectedBrandName(brandId);\n        } else {\n          console.error('Error fetching slot data:', data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching slot data:', error);\n      }\n    };\n\n    if (slotId) {\n      fetchSlotData();\n    }\n  }, [slotId]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const formData = {\n      qrId,\n      brandId: selectedBrandName,\n      date,\n      startTime: slotTime,\n      endTime,\n      redirectionUrl: redirectUrl,\n    };\n\n    try {\n      const response = await fetch(`http://localhost:7000/api/update_slot/${slotId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        alert('Slot updated successfully!');\n      } else {\n        alert('Error updating slot. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error submitting the form:', error);\n      alert('Network error. Please try again!');\n    }\n  };\n\n  return (\n    <div className=\"page-content\">\n      <div className=\"page-title-box\">\n        <div className=\"container-fluid\">\n          <div className=\"row align-items-center\">\n            <div className=\"col-sm-6\">\n              <div className=\"page-title\">\n                <h4>Update Slot</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container-fluid\">\n        <div className=\"page-content-wrapper\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <form onSubmit={handleSubmit}>\n                    {/* Slot ID Dropdown */}\n                    <div className=\"mb-3\">\n                      <label htmlFor=\"slotId\" className=\"form-label\">Select Slot ID to Update</label>\n                      <select\n                        id=\"slotId\"\n                        className=\"form-select\"\n                        value={slotId}\n                        onChange={(e) => setSlotId(e.target.value)}\n                        required\n                      >\n                        <option value=\"\">Select Slot ID</option>\n                        {/* Map over the slots to display */}\n                        <option value=\"123\">Slot 123</option>\n                        <option value=\"124\">Slot 124</option>\n                      </select>\n                    </div>\n\n                    {/* QR ID Dropdown */}\n                    <div className=\"mb-3\">\n                      <label htmlFor=\"qrId\" className=\"form-label\">Select QR ID</label>\n                      <select\n                        id=\"qrId\"\n                        className=\"form-select\"\n                        value={qrId}\n                        onChange={(e) => setQrId(e.target.value)}\n                        required\n                      >\n                        <option value=\"\">Select QR ID</option>\n                        {qrIds.map((qr) => (\n                          <option key={qr._id} value={qr.qrCodeId}>\n                            {qr.qrCodeId}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    {/* Brand Name Dropdown */}\n                    <div className=\"mb-3\">\n                      <label htmlFor=\"brandName\" className=\"form-label\">Select Brand Name</label>\n                      <select\n                        id=\"brandName\"\n                        className=\"form-select\"\n                        value={selectedBrandName}\n                        onChange={(e) => setSelectedBrandName(e.target.value)}\n                        required\n                      >\n                        <option value=\"\">Select Brand Name</option>\n                        {brandNames.map((brand) => (\n                          <option key={brand._id} value={brand._id}>\n                            {brand.brandName}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    {/* Date Input */}\n                    <div className=\"mb-3\">\n                      <label htmlFor=\"date\" className=\"form-label\">Select Date</label>\n                      <input\n                        type=\"date\"\n                        id=\"date\"\n                        className=\"form-control\"\n                        value={date}\n                        onChange={(e) => setDate(e.target.value)}\n                        required\n                      />\n                    </div>\n\n                    {/* Slot Time Input */}\n                    <div className=\"mb-3\">\n                      <label htmlFor=\"slotTime\" className=\"form-label\">Select Slot Time</label>\n                      <input\n                        type=\"time\"\n                        id=\"slotTime\"\n                        className=\"form-control\"\n                        value={slotTime}\n                        onChange={(e) => setSlotTime(e.target.value)}\n                        required\n                      />\n                    </div>\n\n                    {/* End Time Input */}\n                    <div className=\"mb-3\">\n                      <label htmlFor=\"endTime\" className=\"form-label\">Select End Time</label>\n                      <input\n                        type=\"time\"\n                        id=\"endTime\"\n                        className=\"form-control\"\n                        value={endTime}\n                        onChange={(e) => setEndTime(e.target.value)}\n                        required\n                      />\n                    </div>\n\n                    {/* Redirect URL Input */}\n                    <div className=\"mb-3\">\n                      <label htmlFor=\"redirectUrl\" className=\"form-label\">Redirect URL</label>\n                      <input\n                        type=\"url\"\n                        id=\"redirectUrl\"\n                        className=\"form-control\"\n                        value={redirectUrl}\n                        onChange={(e) => setRedirectUrl(e.target.value)}\n                        required\n                      />\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary\">Update Slot</button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SlotUpdate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}