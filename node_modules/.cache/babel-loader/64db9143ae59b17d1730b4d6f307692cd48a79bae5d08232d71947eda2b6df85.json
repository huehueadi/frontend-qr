{"ast":null,"code":"var _jsxFileName = \"/Users/muskanagarwal/Desktop/qrfrontendmain-main/src/components/pages/QRManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QRManagement() {\n  _s();\n  const [qrList, setQrList] = useState([]);\n  const navigate = useNavigate(); // Initialize the navigate function for redirection\n\n  // Fetch QR codes from backend\n  useEffect(() => {\n    const fetchQRCodes = async () => {\n      try {\n        const response = await axios.get('http://localhost:7000/api/get_qrs');\n        setQrList(response.data.Qrs); // Access the Qrs array from response\n      } catch (error) {\n        console.error('Error fetching QR codes:', error);\n      }\n    };\n    fetchQRCodes();\n  }, []);\n\n  // Handle \"Book Slot\" button click to navigate to the booking page\n  const handleBookSlot = () => {\n    navigate('/slot_management');\n  };\n\n  // Function to handle download QR image\n  const handleDownload = (qrCodeId, qrImageUrl) => {\n    const link = document.createElement('a');\n    link.href = qrImageUrl; // The URL of the QR code image from the backend\n    link.download = `${qrCodeId}-qr-code.png`; // Set the filename for download\n    link.click(); // Trigger the download\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-title-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"QR Management\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-4\",\n                  style: {\n                    minHeight: 300\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"QR Code Management\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row mt-4\",\n                    children: qrList.map(qr => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-4 text-center mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: qr.qrImageUrl // Assuming the backend sends the QR image URL\n                        ,\n                        alt: `QR - ${qr.qrCodeId}`,\n                        style: {\n                          width: '100px',\n                          height: '100px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 65,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"mt-2\",\n                        children: [\"QR - \", qr.qrCodeId]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 70,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-primary\",\n                        onClick: handleBookSlot // Redirect to slot management page\n                        ,\n                        children: \"Book Slot\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-success mt-2\",\n                        onClick: () => handleDownload(qr.qrCodeId, qr.qrImageUrl) // Trigger download for this QR code\n                        ,\n                        children: \"Download QR\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 81,\n                        columnNumber: 27\n                      }, this)]\n                    }, qr.qrCodeId, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(QRManagement, \"JspPCtCLkAOhOD9DPpPU5oJUX5I=\", false, function () {\n  return [useNavigate];\n});\n_c = QRManagement;\nexport default QRManagement;\nvar _c;\n$RefreshReg$(_c, \"QRManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","QRManagement","_s","qrList","setQrList","navigate","fetchQRCodes","response","get","data","Qrs","error","console","handleBookSlot","handleDownload","qrCodeId","qrImageUrl","link","document","createElement","href","download","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","minHeight","map","qr","src","alt","width","height","onClick","_c","$RefreshReg$"],"sources":["/Users/muskanagarwal/Desktop/qrfrontendmain-main/src/components/pages/QRManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nfunction QRManagement() {\n  const [qrList, setQrList] = useState([]);\n  const navigate = useNavigate();  // Initialize the navigate function for redirection\n\n  // Fetch QR codes from backend\n  useEffect(() => {\n    const fetchQRCodes = async () => {\n      try {\n        const response = await axios.get('http://localhost:7000/api/get_qrs');\n        setQrList(response.data.Qrs);  // Access the Qrs array from response\n      } catch (error) {\n        console.error('Error fetching QR codes:', error);\n      }\n    };\n    fetchQRCodes();\n  }, []);\n\n  // Handle \"Book Slot\" button click to navigate to the booking page\n  const handleBookSlot = () => {\n    navigate('/slot_management');\n  };\n\n  // Function to handle download QR image\n  const handleDownload = (qrCodeId, qrImageUrl) => {\n    const link = document.createElement('a');\n    link.href = qrImageUrl; // The URL of the QR code image from the backend\n    link.download = `${qrCodeId}-qr-code.png`;  // Set the filename for download\n    link.click();  // Trigger the download\n  };\n\n  return (\n    <div className=\"page-content\">\n      {/* start page title */}\n      <div className=\"page-title-box\">\n        <div className=\"container-fluid\">\n          <div className=\"row align-items-center\">\n            <div className=\"col-sm-6\">\n              <div className=\"page-title\">\n                <h4>QR Management</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end page title */}    \n      <div className=\"container-fluid\">\n        <div className=\"page-content-wrapper\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"p-4\" style={{ minHeight: 300 }}>\n                    <h5>QR Code Management</h5>\n\n                    {/* Render dynamic QR code list */}\n                    <div className=\"row mt-4\">\n                      {qrList.map((qr) => (\n                        <div key={qr.qrCodeId} className=\"col-md-4 text-center mb-3\">\n                          {/* Display the QR code image */}\n                          <img\n                            src={qr.qrImageUrl}  // Assuming the backend sends the QR image URL\n                            alt={`QR - ${qr.qrCodeId}`}\n                            style={{ width: '100px', height: '100px' }}\n                          />\n                          <p className=\"mt-2\">QR - {qr.qrCodeId}</p>\n\n                          {/* Book Slot Button */}\n                          <button\n                            className=\"btn btn-primary\"\n                            onClick={handleBookSlot}  // Redirect to slot management page\n                          >\n                            Book Slot\n                          </button>\n\n                          {/* Download QR Button */}\n                          <button\n                            className=\"btn btn-success mt-2\"\n                            onClick={() => handleDownload(qr.qrCodeId, qr.qrImageUrl)}  // Trigger download for this QR code\n                          >\n                            Download QR\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div> {/* end col */}\n          </div> {/* end row */}\n        </div>\n      </div> {/* container-fluid */}\n    </div>\n  );\n}\n\nexport default QRManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}