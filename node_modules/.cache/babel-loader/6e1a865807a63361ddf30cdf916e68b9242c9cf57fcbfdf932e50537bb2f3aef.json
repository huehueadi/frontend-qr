{"ast":null,"code":"var _jsxFileName = \"/Users/muskanagarwal/Desktop/qrfrontendmain-main/src/components/pages/TemplateSelector.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTemplate = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [fileUrl, setFileUrl] = useState('');\n  const [logo, setLogo] = useState(null);\n  const [brandName, setBrandName] = useState('');\n  const [brandDescription, setBrandDescription] = useState('');\n  const [titles, setTitles] = useState([]);\n  const [descriptions, setDescriptions] = useState([]);\n  const [links, setLinks] = useState([]);\n  const [images, setImages] = useState([]);\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n\n  // Fetch the file URL from the backend API\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const templateId = urlParams.get('templateId');\n    if (templateId) {\n      const fetchFileUrl = async () => {\n        try {\n          const response = await fetch(`http://localhost:7000/api/get-file/${templateId}`);\n          const data = await response.json();\n          if (data.fileUrl) {\n            setFileUrl(data.fileUrl);\n          }\n        } catch (error) {\n          console.error('Error fetching file URL:', error);\n        }\n      };\n      fetchFileUrl();\n    }\n  }, []);\n\n  // Drag and Drop Logic\n  const moveItem = (fromIndex, toIndex, type) => {\n    let items;\n    switch (type) {\n      case 'title':\n        items = [...titles];\n        break;\n      case 'description':\n        items = [...descriptions];\n        break;\n      case 'link':\n        items = [...links];\n        break;\n      case 'image':\n        items = [...images];\n        break;\n      default:\n        return;\n    }\n    const [movedItem] = items.splice(fromIndex, 1);\n    items.splice(toIndex, 0, movedItem);\n    switch (type) {\n      case 'title':\n        setTitles(items);\n        break;\n      case 'description':\n        setDescriptions(items);\n        break;\n      case 'link':\n        setLinks(items);\n        break;\n      case 'image':\n        setImages(items);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('logo', logo);\n    formData.append('brandName', brandName);\n    formData.append('brandDescription', brandDescription);\n\n    // Append dynamic fields for titles, descriptions, links, and images\n    titles.forEach((title, index) => formData.append(`titles[${index}]`, title));\n    descriptions.forEach((description, index) => formData.append(`descriptions[${index}]`, description));\n    links.forEach((link, index) => formData.append(`links[${index}]`, link));\n    images.forEach((image, index) => {\n      if (image) formData.append(`images[${index}]`, image);\n    });\n    try {\n      const response = await fetch('http://localhost:7000/api/add_brand_info', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (data.success) {\n        setShowSuccessMessage(true);\n      } else {\n        alert('Error saving data. Please try again!');\n      }\n    } catch (error) {\n      alert('Network error. Please try again!');\n    }\n  };\n\n  // Add Title Field\n  const handleAddTitle = () => setTitles([...titles, '']);\n\n  // Add Description Field\n  const handleAddDescription = () => setDescriptions([...descriptions, '']);\n\n  // Add Link Field\n  const handleAddLink = () => setLinks([...links, '']);\n\n  // Add Image Field\n  const handleAddImage = () => setImages([...images, null]);\n\n  // Handle Changes for Text and Image Inputs\n  const handleChange = (index, field, value) => {\n    switch (field) {\n      case 'title':\n        const newTitles = [...titles];\n        newTitles[index] = value;\n        setTitles(newTitles);\n        break;\n      case 'description':\n        const newDescriptions = [...descriptions];\n        newDescriptions[index] = value;\n        setDescriptions(newDescriptions);\n        break;\n      case 'link':\n        const newLinks = [...links];\n        newLinks[index] = value;\n        setLinks(newLinks);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleImageChange = (index, file) => {\n    const newImages = [...images];\n    newImages[index] = file;\n    setImages(newImages);\n  };\n\n  // Handle Removal of Fields\n  const handleRemove = (index, field) => {\n    switch (field) {\n      case 'title':\n        setTitles(titles.filter((_, i) => i !== index));\n        break;\n      case 'description':\n        setDescriptions(descriptions.filter((_, i) => i !== index));\n        break;\n      case 'link':\n        setLinks(links.filter((_, i) => i !== index));\n        break;\n      case 'image':\n        setImages(images.filter((_, i) => i !== index));\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Dragging logic for items\n  const DraggableItem = ({\n    index,\n    children,\n    moveItem,\n    type\n  }) => {\n    _s();\n    const [, drag] = useDrag({\n      type: 'item',\n      item: {\n        index,\n        type\n      }\n    });\n    const [, drop] = useDrop({\n      accept: 'item',\n      hover: item => {\n        if (item.index !== index) {\n          moveItem(item.index, index, type);\n          item.index = index;\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: node => drag(drop(node)),\n      className: \"mb-3\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  };\n  _s(DraggableItem, \"M+2lH7TPz6U7DDXmQsQLvb5uMb0=\", false, function () {\n    return [useDrag, useDrop];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content-wrapper\",\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '60%',\n            paddingRight: '10%',\n            overflowY: 'auto',\n            maxHeight: '80vh'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-primary waves-effect waves-light mb-3\",\n                    onClick: handleAddTitle,\n                    children: \"Add Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 21\n                  }, this), titles.map((title, index) => /*#__PURE__*/_jsxDEV(DraggableItem, {\n                    index: index,\n                    moveItem: moveItem,\n                    type: \"title\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: `title-${index}`,\n                        className: \"form-label\",\n                        children: [\"Title \", index + 1]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: `title-${index}`,\n                        className: \"form-control\",\n                        value: title,\n                        onChange: e => handleChange(index, 'title', e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"d-flex justify-content-between mt-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          className: \"btn btn-danger waves-effect waves-light mb-3\",\n                          onClick: () => handleRemove(index, 'title'),\n                          children: \"Remove Title\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 227,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 25\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-primary waves-effect waves-light mb-3\",\n                    onClick: handleAddDescription,\n                    children: \"Add Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 21\n                  }, this), descriptions.map((description, index) => /*#__PURE__*/_jsxDEV(DraggableItem, {\n                    index: index,\n                    moveItem: moveItem,\n                    type: \"description\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: `description-${index}`,\n                        className: \"form-label\",\n                        children: [\"Description \", index + 1]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        id: `description-${index}`,\n                        className: \"form-control\",\n                        value: description,\n                        onChange: e => handleChange(index, 'description', e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"d-flex justify-content-between mt-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          className: \"btn btn-danger waves-effect waves-light mb-3\",\n                          onClick: () => handleRemove(index, 'description'),\n                          children: \"Remove Description\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 260,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 25\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-primary waves-effect waves-light mb-3\",\n                    onClick: handleAddLink,\n                    children: \"Add Link\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 21\n                  }, this), links.map((link, index) => /*#__PURE__*/_jsxDEV(DraggableItem, {\n                    index: index,\n                    moveItem: moveItem,\n                    type: \"link\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: `link-${index}`,\n                        className: \"form-label\",\n                        children: [\"Link \", index + 1]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        id: `link-${index}`,\n                        className: \"form-control\",\n                        value: link,\n                        onChange: e => handleChange(index, 'link', e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 286,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"d-flex justify-content-between mt-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          className: \"btn btn-danger waves-effect waves-light mb-3\",\n                          onClick: () => handleRemove(index, 'link'),\n                          children: \"Remove Link\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 294,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 25\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-primary waves-effect waves-light mb-3\",\n                    onClick: handleAddImage,\n                    children: \"Add Image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 21\n                  }, this), images.map((image, index) => /*#__PURE__*/_jsxDEV(DraggableItem, {\n                    index: index,\n                    moveItem: moveItem,\n                    type: \"image\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: `image-${index}`,\n                        className: \"form-label\",\n                        children: [\"Image \", index + 1]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"file\",\n                        id: `image-${index}`,\n                        className: \"form-control\",\n                        onChange: e => handleImageChange(index, e.target.files[0])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 320,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"d-flex justify-content-between mt-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          className: \"btn btn-danger waves-effect waves-light mb-3\",\n                          onClick: () => handleRemove(index, 'image'),\n                          children: \"Remove Image\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 327,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 326,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 25\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-success waves-effect waves-light mb-3\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '30%',\n            position: 'sticky',\n            top: '20px',\n            height: 'auto',\n            maxHeight: '90vh'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'sticky',\n              top: '20px',\n              width: '350px',\n              height: '650px',\n              border: '16px solid #e7e7e7',\n              borderRadius: '20px',\n              boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n              backgroundColor: '#fff',\n              overflow: 'hidden'\n            },\n            children: fileUrl && /*#__PURE__*/_jsxDEV(\"iframe\", {\n              src: fileUrl,\n              width: \"100%\",\n              height: \"100%\",\n              style: {\n                border: 'none',\n                borderRadius: '20px'\n              },\n              title: \"Mobile Template\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s2(EditTemplate, \"Ku2cCAY3O5HZp5P8fscHXHPLVHQ=\");\n_c = EditTemplate;\nexport default EditTemplate;\nvar _c;\n$RefreshReg$(_c, \"EditTemplate\");","map":{"version":3,"names":["React","useState","useEffect","useDrag","useDrop","jsxDEV","_jsxDEV","EditTemplate","_s2","_s","$RefreshSig$","fileUrl","setFileUrl","logo","setLogo","brandName","setBrandName","brandDescription","setBrandDescription","titles","setTitles","descriptions","setDescriptions","links","setLinks","images","setImages","showSuccessMessage","setShowSuccessMessage","urlParams","URLSearchParams","window","location","search","templateId","get","fetchFileUrl","response","fetch","data","json","error","console","moveItem","fromIndex","toIndex","type","items","movedItem","splice","handleSubmit","e","preventDefault","formData","FormData","append","forEach","title","index","description","link","image","method","body","success","alert","handleAddTitle","handleAddDescription","handleAddLink","handleAddImage","handleChange","field","value","newTitles","newDescriptions","newLinks","handleImageChange","file","newImages","handleRemove","filter","_","i","DraggableItem","children","drag","item","drop","accept","hover","ref","node","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","width","paddingRight","overflowY","maxHeight","onSubmit","onClick","map","htmlFor","id","onChange","target","files","position","top","height","border","borderRadius","boxShadow","backgroundColor","overflow","src","_c","$RefreshReg$"],"sources":["/Users/muskanagarwal/Desktop/qrfrontendmain-main/src/components/pages/TemplateSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\n\nconst EditTemplate = () => {\n  const [fileUrl, setFileUrl] = useState('');\n  const [logo, setLogo] = useState(null);\n  const [brandName, setBrandName] = useState('');\n  const [brandDescription, setBrandDescription] = useState('');\n\n  const [titles, setTitles] = useState([]);\n  const [descriptions, setDescriptions] = useState([]);\n  const [links, setLinks] = useState([]);\n  const [images, setImages] = useState([]);\n\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n\n  // Fetch the file URL from the backend API\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const templateId = urlParams.get('templateId');\n    if (templateId) {\n      const fetchFileUrl = async () => {\n        try {\n          const response = await fetch(`http://localhost:7000/api/get-file/${templateId}`);\n          const data = await response.json();\n          if (data.fileUrl) {\n            setFileUrl(data.fileUrl);\n          }\n        } catch (error) {\n          console.error('Error fetching file URL:', error);\n        }\n      };\n      fetchFileUrl();\n    }\n  }, []);\n\n  // Drag and Drop Logic\n  const moveItem = (fromIndex, toIndex, type) => {\n    let items;\n    switch (type) {\n      case 'title':\n        items = [...titles];\n        break;\n      case 'description':\n        items = [...descriptions];\n        break;\n      case 'link':\n        items = [...links];\n        break;\n      case 'image':\n        items = [...images];\n        break;\n      default:\n        return;\n    }\n\n    const [movedItem] = items.splice(fromIndex, 1);\n    items.splice(toIndex, 0, movedItem);\n\n    switch (type) {\n      case 'title':\n        setTitles(items);\n        break;\n      case 'description':\n        setDescriptions(items);\n        break;\n      case 'link':\n        setLinks(items);\n        break;\n      case 'image':\n        setImages(items);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('logo', logo);\n    formData.append('brandName', brandName);\n    formData.append('brandDescription', brandDescription);\n\n    // Append dynamic fields for titles, descriptions, links, and images\n    titles.forEach((title, index) => formData.append(`titles[${index}]`, title));\n    descriptions.forEach((description, index) => formData.append(`descriptions[${index}]`, description));\n    links.forEach((link, index) => formData.append(`links[${index}]`, link));\n    images.forEach((image, index) => {\n      if (image) formData.append(`images[${index}]`, image);\n    });\n\n    try {\n      const response = await fetch('http://localhost:7000/api/add_brand_info', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setShowSuccessMessage(true);\n      } else {\n        alert('Error saving data. Please try again!');\n      }\n    } catch (error) {\n      alert('Network error. Please try again!');\n    }\n  };\n\n  // Add Title Field\n  const handleAddTitle = () => setTitles([...titles, '']);\n\n  // Add Description Field\n  const handleAddDescription = () => setDescriptions([...descriptions, '']);\n\n  // Add Link Field\n  const handleAddLink = () => setLinks([...links, '']);\n\n  // Add Image Field\n  const handleAddImage = () => setImages([...images, null]);\n\n  // Handle Changes for Text and Image Inputs\n  const handleChange = (index, field, value) => {\n    switch (field) {\n      case 'title':\n        const newTitles = [...titles];\n        newTitles[index] = value;\n        setTitles(newTitles);\n        break;\n      case 'description':\n        const newDescriptions = [...descriptions];\n        newDescriptions[index] = value;\n        setDescriptions(newDescriptions);\n        break;\n      case 'link':\n        const newLinks = [...links];\n        newLinks[index] = value;\n        setLinks(newLinks);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleImageChange = (index, file) => {\n    const newImages = [...images];\n    newImages[index] = file;\n    setImages(newImages);\n  };\n\n  // Handle Removal of Fields\n  const handleRemove = (index, field) => {\n    switch (field) {\n      case 'title':\n        setTitles(titles.filter((_, i) => i !== index));\n        break;\n      case 'description':\n        setDescriptions(descriptions.filter((_, i) => i !== index));\n        break;\n      case 'link':\n        setLinks(links.filter((_, i) => i !== index));\n        break;\n      case 'image':\n        setImages(images.filter((_, i) => i !== index));\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Dragging logic for items\n  const DraggableItem = ({ index, children, moveItem, type }) => {\n    const [, drag] = useDrag({\n      type: 'item',\n      item: { index, type },\n    });\n\n    const [, drop] = useDrop({\n      accept: 'item',\n      hover: (item) => {\n        if (item.index !== index) {\n          moveItem(item.index, index, type);\n          item.index = index;\n        }\n      },\n    });\n\n    return (\n      <div ref={(node) => drag(drop(node))} className=\"mb-3\">\n        {children}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"page-content\">\n      <div className=\"container-fluid\">\n        <div className=\"page-content-wrapper\" style={{ display: 'flex' }}>\n          {/* Left Side: Form */}\n          <div style={{ width: '60%', paddingRight: '10%', overflowY: 'auto', maxHeight: '80vh' }}>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <form onSubmit={handleSubmit}>\n                  {/* Add Title Section */}\n                  <div>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary waves-effect waves-light mb-3\"\n                      onClick={handleAddTitle}\n                    >\n                      Add Title\n                    </button>\n                    {titles.map((title, index) => (\n                      <DraggableItem key={index} index={index} moveItem={moveItem} type=\"title\">\n                        <div>\n                          <label htmlFor={`title-${index}`} className=\"form-label\">Title {index + 1}</label>\n                          <input\n                            type=\"text\"\n                            id={`title-${index}`}\n                            className=\"form-control\"\n                            value={title}\n                            onChange={(e) => handleChange(index, 'title', e.target.value)}\n                          />\n                          <div className=\"d-flex justify-content-between mt-2\">\n                            <button\n                              type=\"button\"\n                              className=\"btn btn-danger waves-effect waves-light mb-3\"\n                              onClick={() => handleRemove(index, 'title')}\n                            >\n                              Remove Title\n                            </button>\n                          </div>\n                        </div>\n                      </DraggableItem>\n                    ))}\n                  </div>\n\n                  {/* Add Description Section */}\n                  <div>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary waves-effect waves-light mb-3\"\n                      onClick={handleAddDescription}\n                    >\n                      Add Description\n                    </button>\n                    {descriptions.map((description, index) => (\n                      <DraggableItem key={index} index={index} moveItem={moveItem} type=\"description\">\n                        <div>\n                          <label htmlFor={`description-${index}`} className=\"form-label\">Description {index + 1}</label>\n                          <textarea\n                            id={`description-${index}`}\n                            className=\"form-control\"\n                            value={description}\n                            onChange={(e) => handleChange(index, 'description', e.target.value)}\n                          />\n                          <div className=\"d-flex justify-content-between mt-2\">\n                            <button\n                              type=\"button\"\n                              className=\"btn btn-danger waves-effect waves-light mb-3\"\n                              onClick={() => handleRemove(index, 'description')}\n                            >\n                              Remove Description\n                            </button>\n                          </div>\n                        </div>\n                      </DraggableItem>\n                    ))}\n                  </div>\n\n                  {/* Add Link Section */}\n                  <div>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary waves-effect waves-light mb-3\"\n                      onClick={handleAddLink}\n                    >\n                      Add Link\n                    </button>\n                    {links.map((link, index) => (\n                      <DraggableItem key={index} index={index} moveItem={moveItem} type=\"link\">\n                        <div>\n                          <label htmlFor={`link-${index}`} className=\"form-label\">Link {index + 1}</label>\n                          <input\n                            type=\"text\"\n                            id={`link-${index}`}\n                            className=\"form-control\"\n                            value={link}\n                            onChange={(e) => handleChange(index, 'link', e.target.value)}\n                          />\n                          <div className=\"d-flex justify-content-between mt-2\">\n                            <button\n                              type=\"button\"\n                              className=\"btn btn-danger waves-effect waves-light mb-3\"\n                              onClick={() => handleRemove(index, 'link')}\n                            >\n                              Remove Link\n                            </button>\n                          </div>\n                        </div>\n                      </DraggableItem>\n                    ))}\n                  </div>\n\n                  {/* Add Image Section */}\n                  <div>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary waves-effect waves-light mb-3\"\n                      onClick={handleAddImage}\n                    >\n                      Add Image\n                    </button>\n                    {images.map((image, index) => (\n                      <DraggableItem key={index} index={index} moveItem={moveItem} type=\"image\">\n                        <div>\n                          <label htmlFor={`image-${index}`} className=\"form-label\">Image {index + 1}</label>\n                          <input\n                            type=\"file\"\n                            id={`image-${index}`}\n                            className=\"form-control\"\n                            onChange={(e) => handleImageChange(index, e.target.files[0])}\n                          />\n                          <div className=\"d-flex justify-content-between mt-2\">\n                            <button\n                              type=\"button\"\n                              className=\"btn btn-danger waves-effect waves-light mb-3\"\n                              onClick={() => handleRemove(index, 'image')}\n                            >\n                              Remove Image\n                            </button>\n                          </div>\n                        </div>\n                      </DraggableItem>\n                    ))}\n                  </div>\n\n                  {/* Submit Button */}\n                  <button type=\"submit\" className=\"btn btn-success waves-effect waves-light mb-3\">\n                    Submit\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Side: Sticky Mobile Frame with HTML Content */}\n          <div\n            style={{\n              width: '30%',\n              position: 'sticky',\n              top: '20px',\n              height: 'auto',\n              maxHeight: '90vh',\n            }}\n          >\n            <div\n              style={{\n                position: 'sticky',\n                top: '20px',\n                width: '350px',\n                height: '650px',\n                border: '16px solid #e7e7e7',\n                borderRadius: '20px',\n                boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n                backgroundColor: '#fff',\n                overflow: 'hidden',\n              }}\n            >\n              {fileUrl && (\n                <iframe\n                  src={fileUrl}\n                  width=\"100%\"\n                  height=\"100%\"\n                  style={{\n                    border: 'none',\n                    borderRadius: '20px',\n                  }}\n                  title=\"Mobile Template\"\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditTemplate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}