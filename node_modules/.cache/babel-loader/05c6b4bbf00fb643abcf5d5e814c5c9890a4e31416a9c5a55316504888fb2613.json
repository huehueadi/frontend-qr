{"ast":null,"code":"var _jsxFileName = \"/Users/muskanagarwal/Desktop/qrfrontendmain-main/src/components/pages/Drap.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n\n// const Drap = () => {\n//   // State to hold user input for customization\n//   const [brandName, setBrandName] = useState(\"\");\n//   const [tagline, setTagline] = useState(\"\");\n//   const [heroHeadline, setHeroHeadline] = useState(\"\");\n//   const [heroDescription, setHeroDescription] = useState(\"\");\n//   const [ctaText, setCtaText] = useState(\"\");\n//   const [feature1Name, setFeature1Name] = useState(\"\");\n//   const [feature1Description, setFeature1Description] = useState(\"\");\n//   const [feature2Name, setFeature2Name] = useState(\"\");\n//   const [feature2Description, setFeature2Description] = useState(\"\");\n//   const [feature3Name, setFeature3Name] = useState(\"\");\n//   const [feature3Description, setFeature3Description] = useState(\"\");\n//   const [ctaHeadline, setCtaHeadline] = useState(\"\");\n//   const [ctaDescription, setCtaDescription] = useState(\"\");\n//   const [signupButtonText, setSignupButtonText] = useState(\"\");\n//   const [contactEmail, setContactEmail] = useState(\"\");\n//   const [bgColor, setBgColor] = useState(\"#f0f8ff\");\n//   const [textColor, setTextColor] = useState(\"#333\");\n//   const [customizedHtml, setCustomizedHtml] = useState(\"\");\n//   const [templateUrl, setTemplateUrl] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);  // Loading state\n//   const [error, setError] = useState(null);  // Error state\n\n//   // Fetch template URL from API when component mounts\n//   useEffect(() => {\n//     const fetchTemplateUrl = async () => {\n//       try {\n//         setIsLoading(true);  // Start loading\n//         const response = await fetch(\"http://localhost:7000/api/g\");\n//         const data = await response.json();\n\n//         if (data.success && data.files[0]?.fileUrl) {\n//           setTemplateUrl(data.files[0].fileUrl);  // Set the template URL from API\n//         } else {\n//           setError(\"Failed to fetch template URL.\");\n//         }\n//       } catch (error) {\n//         setError(\"Error fetching template URL.\");\n//       } finally {\n//         setIsLoading(false);  // End loading\n//       }\n//     };\n\n//     fetchTemplateUrl(); // Fetch the template URL when component mounts\n//   }, []);\n\n//   // Fetch the HTML template and replace placeholders\n//   const fetchAndCustomizeTemplate = async (event) => {\n//     event.preventDefault();\n\n//     if (!templateUrl) {\n//       console.error(\"Template URL is not available\");\n//       return;  // Don't proceed if templateUrl is not set\n//     }\n\n//     try {\n//       setIsLoading(true); // Start loading\n//       const response = await fetch(templateUrl);\n//       const template = await response.text();\n\n//       // Replace placeholders with user input\n//       const customizedTemplate = replacePlaceholders(template, {\n//         BRAND_NAME: brandName,\n//         TAGLINE: tagline,\n//         HERO_HEADLINE: heroHeadline,\n//         HERO_DESCRIPTION: heroDescription,\n//         CTA_TEXT: ctaText,\n//         FEATURE_1_NAME: feature1Name,\n//         FEATURE_1_DESCRIPTION: feature1Description,\n//         FEATURE_2_NAME: feature2Name,\n//         FEATURE_2_DESCRIPTION: feature2Description,\n//         FEATURE_3_NAME: feature3Name,\n//         FEATURE_3_DESCRIPTION: feature3Description,\n//         CTA_HEADLINE: ctaHeadline,\n//         CTA_DESCRIPTION: ctaDescription,\n//         SIGNUP_BUTTON_TEXT: signupButtonText,\n//         CONTACT_EMAIL: contactEmail,\n//         YEAR: new Date().getFullYear(),\n//         BACKGROUND_COLOR: bgColor,\n//         TEXT_COLOR: textColor\n//       });\n\n//       // Set the customized HTML to state\n//       setCustomizedHtml(customizedTemplate);\n//     } catch (error) {\n//       setError(\"Error fetching template from S3.\");\n//     } finally {\n//       setIsLoading(false); // End loading\n//     }\n//   };\n\n//   // Function to replace placeholders in the HTML template\n//   const replacePlaceholders = (htmlTemplate, userData) => {\n//     let customizedHtml = htmlTemplate;\n\n//     Object.keys(userData).forEach((key) => {\n//       const placeholder = `{${key}}`;  // Using curly braces for dynamic values\n//       const value = userData[key] || \"\";\n//       customizedHtml = customizedHtml.replace(new RegExp(placeholder, \"g\"), value);\n//     });\n\n//     return customizedHtml;\n//   };\n\n//   return (\n//     <div>\n//       <h1>Customize Your Landing Page</h1>\n\n//       {/* Error message if template URL or fetching fails */}\n//       {error && <div style={{ color: \"red\" }}>{error}</div>}\n\n//       {/* Loading state */}\n//       {isLoading && <div>Loading...</div>}\n\n//       {/* Form for user customization */}\n//       <form onSubmit={fetchAndCustomizeTemplate}>\n//         <div>\n//           <label htmlFor=\"brandName\">Brand Name:</label>\n//           <input\n//             type=\"text\"\n//             id=\"brandName\"\n//             value={brandName}\n//             onChange={(e) => setBrandName(e.target.value)}\n//             placeholder=\"Enter your brand name\"\n//             disabled={isLoading} // Disable inputs while loading\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"tagline\">Tagline:</label>\n//           <input\n//             type=\"text\"\n//             id=\"tagline\"\n//             value={tagline}\n//             onChange={(e) => setTagline(e.target.value)}\n//             placeholder=\"Enter your tagline\"\n//             disabled={isLoading} // Disable inputs while loading\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"heroHeadline\">Hero Headline:</label>\n//           <input\n//             type=\"text\"\n//             id=\"heroHeadline\"\n//             value={heroHeadline}\n//             onChange={(e) => setHeroHeadline(e.target.value)}\n//             placeholder=\"Enter the hero headline\"\n//             disabled={isLoading} // Disable inputs while loading\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"heroDescription\">Hero Description:</label>\n//           <input\n//             type=\"text\"\n//             id=\"heroDescription\"\n//             value={heroDescription}\n//             onChange={(e) => setHeroDescription(e.target.value)}\n//             placeholder=\"Enter the hero description\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"ctaText\">CTA Text:</label>\n//           <input\n//             type=\"text\"\n//             id=\"ctaText\"\n//             value={ctaText}\n//             onChange={(e) => setCtaText(e.target.value)}\n//             placeholder=\"Enter call-to-action text\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         {/* Feature Inputs */}\n//         <div>\n//           <label htmlFor=\"feature1Name\">Feature 1 Name:</label>\n//           <input\n//             type=\"text\"\n//             id=\"feature1Name\"\n//             value={feature1Name}\n//             onChange={(e) => setFeature1Name(e.target.value)}\n//             placeholder=\"Enter Feature 1 Name\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"feature1Description\">Feature 1 Description:</label>\n//           <input\n//             type=\"text\"\n//             id=\"feature1Description\"\n//             value={feature1Description}\n//             onChange={(e) => setFeature1Description(e.target.value)}\n//             placeholder=\"Enter Feature 1 Description\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         {/* Repeat for Feature 2 and Feature 3 */}\n\n//         <div>\n//           <label htmlFor=\"ctaHeadline\">CTA Headline:</label>\n//           <input\n//             type=\"text\"\n//             id=\"ctaHeadline\"\n//             value={ctaHeadline}\n//             onChange={(e) => setCtaHeadline(e.target.value)}\n//             placeholder=\"Enter CTA Headline\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"ctaDescription\">CTA Description:</label>\n//           <input\n//             type=\"text\"\n//             id=\"ctaDescription\"\n//             value={ctaDescription}\n//             onChange={(e) => setCtaDescription(e.target.value)}\n//             placeholder=\"Enter CTA Description\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"signupButtonText\">Signup Button Text:</label>\n//           <input\n//             type=\"text\"\n//             id=\"signupButtonText\"\n//             value={signupButtonText}\n//             onChange={(e) => setSignupButtonText(e.target.value)}\n//             placeholder=\"Enter Signup Button Text\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"contactEmail\">Contact Email:</label>\n//           <input\n//             type=\"email\"\n//             id=\"contactEmail\"\n//             value={contactEmail}\n//             onChange={(e) => setContactEmail(e.target.value)}\n//             placeholder=\"Enter Contact Email\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"bgColor\">Background Color:</label>\n//           <input\n//             type=\"color\"\n//             id=\"bgColor\"\n//             value={bgColor}\n//             onChange={(e) => setBgColor(e.target.value)}\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"textColor\">Text Color:</label>\n//           <input\n//             type=\"color\"\n//             id=\"textColor\"\n//             value={textColor}\n//             onChange={(e) => setTextColor(e.target.value)}\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <button type=\"submit\" disabled={isLoading}>Generate Landing Page</button>\n//       </form>\n\n//       {/* Render the customized HTML if available */}\n//       <div\n//         id=\"template-container\"\n//         dangerouslySetInnerHTML={{ __html: customizedHtml }}\n//         style={{ marginTop: \"20px\", border: \"1px solid #ccc\", padding: \"20px\" }}\n//       />\n//     </div>\n//   );\n// };\n\n// export default Drap;\n\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Drap() {\n  _s();\n  const {\n    useState\n  } = React;\n  const [widgets, setWidgets] = useState([]);\n  const addWidget = widgetType => {\n    let widgetHTML = '';\n    switch (widgetType) {\n      case 'text-block':\n        widgetHTML = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"Text Block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700\",\n            children: \"This is a sample text block. You can edit this text to display your own content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 23\n        }, this);\n        break;\n      case 'social-icons':\n        widgetHTML = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"Social Media Icons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-facebook text-blue-600 text-2xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-twitter text-blue-400 text-2xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-instagram text-pink-500 text-2xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 23\n        }, this);\n        break;\n      case 'link-button':\n        widgetHTML = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"Link Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"block text-center bg-blue-500 text-white py-2 rounded-lg\",\n            href: \"#\",\n            children: \"Click Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 23\n        }, this);\n        break;\n      case 'image-block':\n        widgetHTML = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"Image Block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"w-full rounded-lg\",\n            src: \"https://placehold.co/300x200\",\n            alt: \"Sample\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 23\n        }, this);\n        break;\n      case 'video-block':\n        widgetHTML = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"Video Block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n            className: \"w-full rounded-lg\",\n            controls: true,\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: \"https://www.w3schools.com/html/mov_bbb.mp4\",\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 31\n            }, this), \"Your browser does not support the video tag.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 23\n        }, this);\n        break;\n      case 'file-download':\n        widgetHTML = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"File Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"block text-center bg-green-500 text-white py-2 rounded-lg\",\n            href: \"#\",\n            children: \"Download File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 23\n        }, this);\n        break;\n      case 'contact-form':\n        widgetHTML = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"Contact Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-gray-700\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"w-full p-2 border rounded-lg\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-gray-700\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"w-full p-2 border rounded-lg\",\n                type: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-gray-700\",\n                children: \"Message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"w-full p-2 border rounded-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-full bg-blue-500 text-white py-2 rounded-lg\",\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 23\n        }, this);\n        break;\n      case 'payment-link':\n        widgetHTML = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold\",\n            children: \"Payment Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"block text-center bg-red-500 text-white py-2 rounded-lg\",\n            href: \"#\",\n            children: \"Donate Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 23\n        }, this);\n        break;\n    }\n    setWidgets([...widgets, widgetHTML]);\n  };\n  const savePage = async () => {\n    const pageContent = document.getElementById('mobile-preview').innerHTML;\n    try {\n      await axios.post('/api/widgets/save', {\n        pageContent\n      });\n      alert('Page saved successfully!');\n    } catch (error) {\n      alert('Error saving the page.');\n    }\n  };\n  const publishPage = async () => {\n    const pageContent = document.getElementById('mobile-preview').innerHTML;\n    try {\n      await axios.post('/api/widgets/publish', {\n        pageContent\n      });\n      alert('Page published successfully!');\n    } catch (error) {\n      alert('Error publishing the page.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 bg-gray-50 p-6 overflow-y-scroll\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 text-white py-2 px-4 rounded-lg\",\n          onClick: () => addWidget('text-block'),\n          children: \"Add Text Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-500 text-white py-2 px-4 rounded-lg\",\n          onClick: savePage,\n          children: \"Save Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-red-500 text-white py-2 px-4 rounded-lg\",\n          onClick: publishPage,\n          children: \"Publish Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 bg-white shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mobile-preview\",\n        className: \"p-4\",\n        children: widgets.map((widget, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: widget\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 5\n  }, this);\n}\n_s(Drap, \"4C8VfnkPK2lEyqOYdVo8xluJs5k=\");\n_c = Drap;\nexport default Drap;\nvar _c;\n$RefreshReg$(_c, \"Drap\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","Drap","_s","useState","widgets","setWidgets","addWidget","widgetType","widgetHTML","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","src","alt","controls","type","savePage","pageContent","document","getElementById","innerHTML","post","alert","error","publishPage","onClick","id","map","widget","index","_c","$RefreshReg$"],"sources":["/Users/muskanagarwal/Desktop/qrfrontendmain-main/src/components/pages/Drap.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n\n// const Drap = () => {\n//   // State to hold user input for customization\n//   const [brandName, setBrandName] = useState(\"\");\n//   const [tagline, setTagline] = useState(\"\");\n//   const [heroHeadline, setHeroHeadline] = useState(\"\");\n//   const [heroDescription, setHeroDescription] = useState(\"\");\n//   const [ctaText, setCtaText] = useState(\"\");\n//   const [feature1Name, setFeature1Name] = useState(\"\");\n//   const [feature1Description, setFeature1Description] = useState(\"\");\n//   const [feature2Name, setFeature2Name] = useState(\"\");\n//   const [feature2Description, setFeature2Description] = useState(\"\");\n//   const [feature3Name, setFeature3Name] = useState(\"\");\n//   const [feature3Description, setFeature3Description] = useState(\"\");\n//   const [ctaHeadline, setCtaHeadline] = useState(\"\");\n//   const [ctaDescription, setCtaDescription] = useState(\"\");\n//   const [signupButtonText, setSignupButtonText] = useState(\"\");\n//   const [contactEmail, setContactEmail] = useState(\"\");\n//   const [bgColor, setBgColor] = useState(\"#f0f8ff\");\n//   const [textColor, setTextColor] = useState(\"#333\");\n//   const [customizedHtml, setCustomizedHtml] = useState(\"\");\n//   const [templateUrl, setTemplateUrl] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);  // Loading state\n//   const [error, setError] = useState(null);  // Error state\n\n//   // Fetch template URL from API when component mounts\n//   useEffect(() => {\n//     const fetchTemplateUrl = async () => {\n//       try {\n//         setIsLoading(true);  // Start loading\n//         const response = await fetch(\"http://localhost:7000/api/g\");\n//         const data = await response.json();\n\n//         if (data.success && data.files[0]?.fileUrl) {\n//           setTemplateUrl(data.files[0].fileUrl);  // Set the template URL from API\n//         } else {\n//           setError(\"Failed to fetch template URL.\");\n//         }\n//       } catch (error) {\n//         setError(\"Error fetching template URL.\");\n//       } finally {\n//         setIsLoading(false);  // End loading\n//       }\n//     };\n\n//     fetchTemplateUrl(); // Fetch the template URL when component mounts\n//   }, []);\n\n//   // Fetch the HTML template and replace placeholders\n//   const fetchAndCustomizeTemplate = async (event) => {\n//     event.preventDefault();\n\n//     if (!templateUrl) {\n//       console.error(\"Template URL is not available\");\n//       return;  // Don't proceed if templateUrl is not set\n//     }\n\n//     try {\n//       setIsLoading(true); // Start loading\n//       const response = await fetch(templateUrl);\n//       const template = await response.text();\n\n//       // Replace placeholders with user input\n//       const customizedTemplate = replacePlaceholders(template, {\n//         BRAND_NAME: brandName,\n//         TAGLINE: tagline,\n//         HERO_HEADLINE: heroHeadline,\n//         HERO_DESCRIPTION: heroDescription,\n//         CTA_TEXT: ctaText,\n//         FEATURE_1_NAME: feature1Name,\n//         FEATURE_1_DESCRIPTION: feature1Description,\n//         FEATURE_2_NAME: feature2Name,\n//         FEATURE_2_DESCRIPTION: feature2Description,\n//         FEATURE_3_NAME: feature3Name,\n//         FEATURE_3_DESCRIPTION: feature3Description,\n//         CTA_HEADLINE: ctaHeadline,\n//         CTA_DESCRIPTION: ctaDescription,\n//         SIGNUP_BUTTON_TEXT: signupButtonText,\n//         CONTACT_EMAIL: contactEmail,\n//         YEAR: new Date().getFullYear(),\n//         BACKGROUND_COLOR: bgColor,\n//         TEXT_COLOR: textColor\n//       });\n\n//       // Set the customized HTML to state\n//       setCustomizedHtml(customizedTemplate);\n//     } catch (error) {\n//       setError(\"Error fetching template from S3.\");\n//     } finally {\n//       setIsLoading(false); // End loading\n//     }\n//   };\n\n//   // Function to replace placeholders in the HTML template\n//   const replacePlaceholders = (htmlTemplate, userData) => {\n//     let customizedHtml = htmlTemplate;\n\n//     Object.keys(userData).forEach((key) => {\n//       const placeholder = `{${key}}`;  // Using curly braces for dynamic values\n//       const value = userData[key] || \"\";\n//       customizedHtml = customizedHtml.replace(new RegExp(placeholder, \"g\"), value);\n//     });\n\n//     return customizedHtml;\n//   };\n\n//   return (\n//     <div>\n//       <h1>Customize Your Landing Page</h1>\n\n//       {/* Error message if template URL or fetching fails */}\n//       {error && <div style={{ color: \"red\" }}>{error}</div>}\n\n//       {/* Loading state */}\n//       {isLoading && <div>Loading...</div>}\n\n//       {/* Form for user customization */}\n//       <form onSubmit={fetchAndCustomizeTemplate}>\n//         <div>\n//           <label htmlFor=\"brandName\">Brand Name:</label>\n//           <input\n//             type=\"text\"\n//             id=\"brandName\"\n//             value={brandName}\n//             onChange={(e) => setBrandName(e.target.value)}\n//             placeholder=\"Enter your brand name\"\n//             disabled={isLoading} // Disable inputs while loading\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"tagline\">Tagline:</label>\n//           <input\n//             type=\"text\"\n//             id=\"tagline\"\n//             value={tagline}\n//             onChange={(e) => setTagline(e.target.value)}\n//             placeholder=\"Enter your tagline\"\n//             disabled={isLoading} // Disable inputs while loading\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"heroHeadline\">Hero Headline:</label>\n//           <input\n//             type=\"text\"\n//             id=\"heroHeadline\"\n//             value={heroHeadline}\n//             onChange={(e) => setHeroHeadline(e.target.value)}\n//             placeholder=\"Enter the hero headline\"\n//             disabled={isLoading} // Disable inputs while loading\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"heroDescription\">Hero Description:</label>\n//           <input\n//             type=\"text\"\n//             id=\"heroDescription\"\n//             value={heroDescription}\n//             onChange={(e) => setHeroDescription(e.target.value)}\n//             placeholder=\"Enter the hero description\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"ctaText\">CTA Text:</label>\n//           <input\n//             type=\"text\"\n//             id=\"ctaText\"\n//             value={ctaText}\n//             onChange={(e) => setCtaText(e.target.value)}\n//             placeholder=\"Enter call-to-action text\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         {/* Feature Inputs */}\n//         <div>\n//           <label htmlFor=\"feature1Name\">Feature 1 Name:</label>\n//           <input\n//             type=\"text\"\n//             id=\"feature1Name\"\n//             value={feature1Name}\n//             onChange={(e) => setFeature1Name(e.target.value)}\n//             placeholder=\"Enter Feature 1 Name\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"feature1Description\">Feature 1 Description:</label>\n//           <input\n//             type=\"text\"\n//             id=\"feature1Description\"\n//             value={feature1Description}\n//             onChange={(e) => setFeature1Description(e.target.value)}\n//             placeholder=\"Enter Feature 1 Description\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         {/* Repeat for Feature 2 and Feature 3 */}\n\n//         <div>\n//           <label htmlFor=\"ctaHeadline\">CTA Headline:</label>\n//           <input\n//             type=\"text\"\n//             id=\"ctaHeadline\"\n//             value={ctaHeadline}\n//             onChange={(e) => setCtaHeadline(e.target.value)}\n//             placeholder=\"Enter CTA Headline\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"ctaDescription\">CTA Description:</label>\n//           <input\n//             type=\"text\"\n//             id=\"ctaDescription\"\n//             value={ctaDescription}\n//             onChange={(e) => setCtaDescription(e.target.value)}\n//             placeholder=\"Enter CTA Description\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"signupButtonText\">Signup Button Text:</label>\n//           <input\n//             type=\"text\"\n//             id=\"signupButtonText\"\n//             value={signupButtonText}\n//             onChange={(e) => setSignupButtonText(e.target.value)}\n//             placeholder=\"Enter Signup Button Text\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"contactEmail\">Contact Email:</label>\n//           <input\n//             type=\"email\"\n//             id=\"contactEmail\"\n//             value={contactEmail}\n//             onChange={(e) => setContactEmail(e.target.value)}\n//             placeholder=\"Enter Contact Email\"\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"bgColor\">Background Color:</label>\n//           <input\n//             type=\"color\"\n//             id=\"bgColor\"\n//             value={bgColor}\n//             onChange={(e) => setBgColor(e.target.value)}\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <div>\n//           <label htmlFor=\"textColor\">Text Color:</label>\n//           <input\n//             type=\"color\"\n//             id=\"textColor\"\n//             value={textColor}\n//             onChange={(e) => setTextColor(e.target.value)}\n//             disabled={isLoading}\n//           />\n//         </div>\n\n//         <button type=\"submit\" disabled={isLoading}>Generate Landing Page</button>\n//       </form>\n\n//       {/* Render the customized HTML if available */}\n//       <div\n//         id=\"template-container\"\n//         dangerouslySetInnerHTML={{ __html: customizedHtml }}\n//         style={{ marginTop: \"20px\", border: \"1px solid #ccc\", padding: \"20px\" }}\n//       />\n//     </div>\n//   );\n// };\n\n// export default Drap;\n\n\n\n\nimport React from 'react'\nimport axios from 'axios';\n\nfunction Drap() {\n\n  const { useState } = React;\n\n      const [widgets, setWidgets] = useState([]);\n\n      const addWidget = (widgetType) => {\n          let widgetHTML = '';\n          switch (widgetType) {\n              case 'text-block':\n                  widgetHTML = (\n                      <div className=\"bg-white p-4 rounded-lg shadow\">\n                          <h3 className=\"text-lg font-semibold\">Text Block</h3>\n                          <p className=\"text-gray-700\">This is a sample text block. You can edit this text to display your own content.</p>\n                      </div>\n                  );\n                  break;\n              case 'social-icons':\n                  widgetHTML = (\n                      <div className=\"bg-white p-4 rounded-lg shadow\">\n                          <h3 className=\"text-lg font-semibold\">Social Media Icons</h3>\n                          <div className=\"flex space-x-4\">\n                              <i className=\"fab fa-facebook text-blue-600 text-2xl\"></i>\n                              <i className=\"fab fa-twitter text-blue-400 text-2xl\"></i>\n                              <i className=\"fab fa-instagram text-pink-500 text-2xl\"></i>\n                          </div>\n                      </div>\n                  );\n                  break;\n              case 'link-button':\n                  widgetHTML = (\n                      <div className=\"bg-white p-4 rounded-lg shadow\">\n                          <h3 className=\"text-lg font-semibold\">Link Button</h3>\n                          <a className=\"block text-center bg-blue-500 text-white py-2 rounded-lg\" href=\"#\">Click Me</a>\n                      </div>\n                  );\n                  break;\n              case 'image-block':\n                  widgetHTML = (\n                      <div className=\"bg-white p-4 rounded-lg shadow\">\n                          <h3 className=\"text-lg font-semibold\">Image Block</h3>\n                          <img\n                              className=\"w-full rounded-lg\"\n                              src=\"https://placehold.co/300x200\"\n                              alt=\"Sample\"\n                          />\n                      </div>\n                  );\n                  break;\n              case 'video-block':\n                  widgetHTML = (\n                      <div className=\"bg-white p-4 rounded-lg shadow\">\n                          <h3 className=\"text-lg font-semibold\">Video Block</h3>\n                          <video className=\"w-full rounded-lg\" controls>\n                              <source src=\"https://www.w3schools.com/html/mov_bbb.mp4\" type=\"video/mp4\" />\n                              Your browser does not support the video tag.\n                          </video>\n                      </div>\n                  );\n                  break;\n              case 'file-download':\n                  widgetHTML = (\n                      <div className=\"bg-white p-4 rounded-lg shadow\">\n                          <h3 className=\"text-lg font-semibold\">File Download</h3>\n                          <a className=\"block text-center bg-green-500 text-white py-2 rounded-lg\" href=\"#\">Download File</a>\n                      </div>\n                  );\n                  break;\n              case 'contact-form':\n                  widgetHTML = (\n                      <div className=\"bg-white p-4 rounded-lg shadow\">\n                          <h3 className=\"text-lg font-semibold\">Contact Form</h3>\n                          <form>\n                              <div className=\"mb-4\">\n                                  <label className=\"block text-gray-700\">Name</label>\n                                  <input className=\"w-full p-2 border rounded-lg\" type=\"text\" />\n                              </div>\n                              <div className=\"mb-4\">\n                                  <label className=\"block text-gray-700\">Email</label>\n                                  <input className=\"w-full p-2 border rounded-lg\" type=\"email\" />\n                              </div>\n                              <div className=\"mb-4\">\n                                  <label className=\"block text-gray-700\">Message</label>\n                                  <textarea className=\"w-full p-2 border rounded-lg\"></textarea>\n                              </div>\n                              <button className=\"w-full bg-blue-500 text-white py-2 rounded-lg\" type=\"submit\">\n                                  Send\n                              </button>\n                          </form>\n                      </div>\n                  );\n                  break;\n              case 'payment-link':\n                  widgetHTML = (\n                      <div className=\"bg-white p-4 rounded-lg shadow\">\n                          <h3 className=\"text-lg font-semibold\">Payment Link</h3>\n                          <a className=\"block text-center bg-red-500 text-white py-2 rounded-lg\" href=\"#\">Donate Now</a>\n                      </div>\n                  );\n                  break;\n          }\n          setWidgets([...widgets, widgetHTML]);\n      };\n\n      const savePage = async () => {\n          const pageContent = document.getElementById('mobile-preview').innerHTML;\n          try {\n              await axios.post('/api/widgets/save', { pageContent });\n              alert('Page saved successfully!');\n          } catch (error) {\n              alert('Error saving the page.');\n          }\n      };\n\n      const publishPage = async () => {\n          const pageContent = document.getElementById('mobile-preview').innerHTML;\n          try {\n              await axios.post('/api/widgets/publish', { pageContent });\n              alert('Page published successfully!');\n          } catch (error) {\n              alert('Error publishing the page.');\n          }\n      };\n  return (\n    <div className=\"flex h-screen\">\n                    <div className=\"w-1/2 bg-gray-50 p-6 overflow-y-scroll\">\n                        <div className=\"space-y-4\">\n                            <button\n                                className=\"bg-blue-500 text-white py-2 px-4 rounded-lg\"\n                                onClick={() => addWidget('text-block')}\n                            >\n                                Add Text Block\n                            </button>\n                            <button\n                                className=\"bg-green-500 text-white py-2 px-4 rounded-lg\"\n                                onClick={savePage}\n                            >\n                                Save Page\n                            </button>\n                            <button\n                                className=\"bg-red-500 text-white py-2 px-4 rounded-lg\"\n                                onClick={publishPage}\n                            >\n                                Publish Page\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"w-1/2 bg-white shadow-lg\">\n                        <div id=\"mobile-preview\" className=\"p-4\">\n                            {widgets.map((widget, index) => (\n                                <div key={index}>{widget}</div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n           \nexport default Drap\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}