{"ast":null,"code":"var _jsxFileName = \"/Users/muskanagarwal/Desktop/qrfrontendmain-main/src/components/pages/TemplateSelector.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// const EditTemplate = () => {\n//   const [fileUrl, setFileUrl] = useState('');\n//   const [brandTitle, setBrandTitle] = useState('');\n//   const [slug, setSlug] = useState('');\n\n//   const [titles, setTitles] = useState([]);\n//   const [descriptions, setDescriptions] = useState([]);\n//   const [links, setLinks] = useState([]);\n//   const [images, setImages] = useState([]);\n\n//   const [htmlContent, setHtmlContent] = useState(''); // For the preview\n\n//   useEffect(() => {\n//     const urlParams = new URLSearchParams(window.location.search);\n//     const templateNameParam = urlParams.get('templateName');\n//     if (templateNameParam) {\n//       setFileUrl(`http://localhost:8000/api/default/${templateNameParam}`);\n\n//       // Fetch existing HTML content\n//       const fetchHtmlContent = async () => {\n//         try {\n//           const response = await fetch(`http://localhost:8000/api/default/${templateNameParam}`);\n//           if (response.ok) {\n//             const html = await response.text();\n//             setHtmlContent(html);\n//           } else {\n//             console.error('Error fetching HTML content:', response.statusText);\n//           }\n//         } catch (error) {\n//           console.error('Error fetching HTML content:', error);\n//         }\n//       };\n//       fetchHtmlContent();\n//     }\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Extract the template name from the URL\n//     const urlParams = new URLSearchParams(window.location.search);\n//     const templateName = urlParams.get('templateName');\n\n//     if (!templateName) {\n//       alert('Template name is missing in the URL!');\n//       return;\n//     }\n\n//     // Construct the contentArray based on form inputs\n//     const contentArray = [\n//       ...titles.map((t) => ({ type: 'text', data: t })),\n//       ...descriptions.map((d) => ({ type: 'text', data: d })),\n//       ...links.map((l) => ({ type: 'link', data: l })),\n//       ...images.map((img) => (img ? { type: 'image', data: img } : null)).filter(Boolean), // Exclude null/undefined images\n//     ];\n\n//     // Prepare the form data in the structure expected by the backend\n//     const formData = {\n//       title: brandTitle,\n//       slug: slug.toLowerCase().replace(/ /g, '-'), // Ensure slug is URL-friendly\n//       template: templateName,                     // Pass the template name from the URL\n//       contentArray,                               // Dynamic content array\n//     };\n\n//     console.log('Form Data:', formData); // Debugging: Log the form data\n\n//     // Submit the form data to the API\n//     try {\n//       const response = await fetch('http://localhost:8000/api/create', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json', // Specify JSON content type\n//         },\n//         body: JSON.stringify(formData), // Send the form data as JSON\n//       });\n\n//       if (response.ok) {\n//         const data = await response.json();\n//         console.log('Form submitted successfully:', data);\n\n//         // Fetch and update the HTML content for preview using the new slug\n//         const updatedHtmlResponse = await fetch(`http://localhost:8000/api/get/${slug}`);\n//         if (updatedHtmlResponse.ok) {\n//           const updatedHtml = await updatedHtmlResponse.text();\n//           setHtmlContent(updatedHtml);\n//         } else {\n//           console.error('Error fetching updated HTML content:', updatedHtmlResponse.statusText);\n//         }\n//       } else {\n//         console.error('Error submitting form:', response.statusText);\n//       }\n//     } catch (error) {\n//       console.error('Error submitting form:', error);\n//     }\n//   };\n\n//   const handleAdd = (type) => {\n//     switch (type) {\n//       case 'title':\n//         setTitles([...titles, '']);\n//         break;\n//       case 'description':\n//         setDescriptions([...descriptions, '']);\n//         break;\n//       case 'link':\n//         setLinks([...links, '']);\n//         break;\n//       case 'image':\n//         setImages([...images, '']);\n//         break;\n//       default:\n//         break;\n//     }\n//   };\n\n//   const handleChange = (index, field, value) => {\n//     switch (field) {\n//       case 'title':\n//         setTitles(titles.map((t, i) => (i === index ? value : t)));\n//         break;\n//       case 'description':\n//         setDescriptions(descriptions.map((d, i) => (i === index ? value : d)));\n//         break;\n//       case 'link':\n//         setLinks(links.map((l, i) => (i === index ? value : l)));\n//         break;\n//       case 'image':\n//         setImages(images.map((img, i) => (i === index ? value : img)));\n//         break;\n//       default:\n//         break;\n//     }\n//   };\n\n//   const handleRemove = (index, field) => {\n//     switch (field) {\n//       case 'title':\n//         setTitles(titles.filter((_, i) => i !== index));\n//         break;\n//       case 'description':\n//         setDescriptions(descriptions.filter((_, i) => i !== index));\n//         break;\n//       case 'link':\n//         setLinks(links.filter((_, i) => i !== index));\n//         break;\n//       case 'image':\n//         setImages(images.filter((_, i) => i !== index));\n//         break;\n//       default:\n//         break;\n//     }\n//   };\n\n//   return (\n//     <div className=\"page-content\">\n//       <div className=\"page-title-box\">\n//         <div className=\"container-fluid\">\n//           <div className=\"row align-items-center\">\n//             <div className=\"col-sm-6\">\n//               <div className=\"page-title\">\n//                 <h4>Edit Template</h4>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"container-fluid\">\n//         <div className=\"page-content-wrapper\" style={{ display: 'flex', gap: '20px' }}>\n//           {/* Left Side: Form */}\n//           <div style={{ width: 'calc(60% + 10px)', paddingRight: '5%', overflowY: 'auto', maxHeight: '80vh' }}>\n//             <div className=\"card\">\n//               <div className=\"card-body\">\n//                 <form onSubmit={handleSubmit}>\n//                   <div className=\"mb-3\">\n//                     <label htmlFor=\"brandTitle\" className=\"form-label\">Title</label>\n//                     <input\n//                       type=\"text\"\n//                       id=\"brandTitle\"\n//                       className=\"form-control\"\n//                       value={brandTitle}\n//                       onChange={(e) => setBrandTitle(e.target.value)}\n//                       required\n//                     />\n//                   </div>\n\n//                   <div className=\"mb-3\">\n//                     <label htmlFor=\"slug\" className=\"form-label\">Slug</label>\n//                     <input\n//                       type=\"text\"\n//                       id=\"slug\"\n//                       className=\"form-control\"\n//                       value={slug}\n//                       onChange={(e) => setSlug(e.target.value)}\n//                       required\n//                     />\n//                   </div>\n\n//                   {/* Add Content Buttons */}\n//                   <div className=\"btn-group me-1 mt-1\">\n//                     <button\n//                       type=\"button\"\n//                       className=\"btn btn-success dropdown-toggle\"\n//                       data-bs-toggle=\"dropdown\"\n//                       aria-haspopup=\"true\"\n//                       aria-expanded=\"false\"\n//                     >\n//                       Add Content <i className=\"mdi mdi-chevron-down\"></i>\n//                     </button>\n//                     <div className=\"dropdown-menu\">\n//                       <button className=\"dropdown-item\" type=\"button\" onClick={() => handleAdd('title')}>Add Title</button>\n//                       <button className=\"dropdown-item\" type=\"button\" onClick={() => handleAdd('description')}>Add Description</button>\n//                       <button className=\"dropdown-item\" type=\"button\" onClick={() => handleAdd('link')}>Add Link</button>\n//                       <button className=\"dropdown-item\" type=\"button\" onClick={() => handleAdd('image')}>Add Image</button>\n//                     </div>\n//                   </div>\n\n//                   {/* Dynamically Render Inputs */}\n//                   {titles.map((title, index) => (\n//                     <div key={index} className=\"mb-3\">\n//                       <label htmlFor={`title-${index}`} className=\"form-label\">Title {index + 1}</label>\n//                       <input\n//                         type=\"text\"\n//                         id={`title-${index}`}\n//                         className=\"form-control\"\n//                         value={title}\n//                         onChange={(e) => handleChange(index, 'title', e.target.value)}\n//                       />\n//                       <button\n//                         type=\"button\"\n//                         className=\"btn btn-danger mt-2\"\n//                         onClick={() => handleRemove(index, 'title')}\n//                       >\n//                         Remove Title\n//                       </button>\n//                     </div>\n//                   ))}\n\n//                   <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n//                 </form>\n//               </div>\n//             </div>\n//           </div>\n\n//           {/* Right Side: Mobile Preview */}\n//           <div\n//             style={{\n//               width: '30%',\n//               position: 'sticky',\n//               top: '20px',\n//               height: 'auto',\n//               maxHeight: '90vh',\n//             }}\n//           >\n//             <div\n//               style={{\n//                 width: '100%',\n//                 height: '667px',\n//                 maxWidth: '375px',\n//                 margin: 'auto',\n//                 border: '16px solid #e7e7e7',\n//                 borderRadius: '40px',\n//                 boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n//                 backgroundColor: '#fff',\n//                 overflow: 'hidden',\n//               }}\n//             >\n//               {htmlContent ? (\n//                 <iframe\n//                   srcDoc={htmlContent}\n//                   width=\"100%\"\n//                   height=\"100%\"\n//                   style={{ border: 'none' }}\n//                   title=\"Mobile Template Preview\"\n//                 />\n//               ) : (\n//                 <p style={{ textAlign: 'center', color: '#999' }}>No template selected. Upload or select a template to preview.</p>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EditTemplate;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Edit = () => {\n  _s();\n  const [htmlContent, setHtmlContent] = useState('');\n  const [templateName, setTemplateName] = useState('');\n  const [slug, setSlug] = useState('');\n  const [title, setTitle] = useState('');\n  const [titles, setTitles] = useState([]);\n  const [descriptions, setDescriptions] = useState([]);\n  const [links, setLinks] = useState([]);\n  const [images, setImages] = useState([]);\n\n  // Extract template name from URL\n  useEffect(() => {\n    const currentUrl = window.location.href;\n    const urlParams = new URLSearchParams(window.location.search);\n    const templateFromUrl = urlParams.get('templateName'); // Extract 'templateName' from query string\n    setTemplateName(templateFromUrl);\n    const fetchHtmlContent = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/get/${templateFromUrl}`);\n        if (response.ok) {\n          const html = await response.text();\n          setHtmlContent(html);\n        } else {\n          console.error('Error fetching HTML content:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching HTML content:', error);\n      }\n    };\n    if (templateFromUrl) {\n      fetchHtmlContent();\n    }\n  }, []);\n\n  // Form Handlers\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Prepare the contentArray based on the form inputs\n    const contentArray = [];\n    titles.forEach(t => contentArray.push({\n      type: 'text',\n      data: t\n    }));\n    descriptions.forEach(d => contentArray.push({\n      type: 'text',\n      data: d\n    }));\n    links.forEach(l => contentArray.push({\n      type: 'link',\n      data: l\n    }));\n    images.forEach(img => {\n      if (img) {\n        contentArray.push({\n          type: 'image',\n          data: img\n        });\n      }\n    });\n\n    // Prepare the form data to match the API structure\n    const formData = {\n      title,\n      slug,\n      template: templateName,\n      // Using the templateName from the URL\n      contentArray\n    };\n    console.log(formData);\n\n    // Determine the submit URL dynamically based on templateName\n    const submitUrl = `http://localhost:8000/api/default/${templateName}`;\n\n    // Sending data to the backend\n    try {\n      const response = await fetch(submitUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData) // Send the structured formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Form submitted successfully:', data);\n\n        // After successful submission, update the HTML content in the mobile frame using the new slug\n        const updatedHtmlResponse = await fetch(`http://localhost:8000/api/get/${slug}`);\n        if (updatedHtmlResponse.ok) {\n          const updatedHtml = await updatedHtmlResponse.text();\n          setHtmlContent(updatedHtml);\n        } else {\n          console.error('Error fetching updated HTML content:', updatedHtmlResponse.statusText);\n        }\n      } else {\n        console.error('Error submitting form:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  };\n  const handleAddTitle = () => setTitles([...titles, '']);\n  const handleAddDescription = () => setDescriptions([...descriptions, '']);\n  const handleAddLink = () => setLinks([...links, '']);\n  const handleAddImage = () => setImages([...images, null]);\n  const handleChange = (index, type, value) => {\n    switch (type) {\n      case 'title':\n        setTitles(titles.map((t, i) => i === index ? value : t));\n        break;\n      case 'description':\n        setDescriptions(descriptions.map((d, i) => i === index ? value : d));\n        break;\n      case 'link':\n        setLinks(links.map((l, i) => i === index ? value : l));\n        break;\n      default:\n        break;\n    }\n  };\n  const handleImageChange = (index, file) => {\n    setImages(images.map((img, i) => i === index ? file : img));\n  };\n  const handleRemove = (index, type) => {\n    switch (type) {\n      case 'title':\n        setTitles(titles.filter((_, i) => i !== index));\n        break;\n      case 'description':\n        setDescriptions(descriptions.filter((_, i) => i !== index));\n        break;\n      case 'link':\n        setLinks(links.filter((_, i) => i !== index));\n        break;\n      case 'image':\n        setImages(images.filter((_, i) => i !== index));\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-title-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Template Information Form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content-wrapper\",\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 'calc(70%)',\n            paddingRight: '5%',\n            overflowY: 'auto',\n            maxHeight: '80vh'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"title\",\n                    className: \"form-label\",\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"title\",\n                    className: \"form-control\",\n                    value: title,\n                    onChange: e => setTitle(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"slug\",\n                    className: \"form-label\",\n                    children: \"Slug\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"slug\",\n                    className: \"form-control\",\n                    value: slug,\n                    onChange: e => setSlug(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn-group me-1 mt-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-success dropdown-toggle\",\n                    \"data-bs-toggle\": \"dropdown\",\n                    \"aria-haspopup\": \"true\",\n                    \"aria-expanded\": \"false\",\n                    children: [\"Add Element \", /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-chevron-down\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown-menu\",\n                    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"dropdown-item\",\n                      href: \"#\",\n                      onClick: handleAddTitle,\n                      children: \"Add Title\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"dropdown-item\",\n                      href: \"#\",\n                      onClick: handleAddDescription,\n                      children: \"Add Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"dropdown-item\",\n                      href: \"#\",\n                      onClick: handleAddLink,\n                      children: \"Add Link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"dropdown-item\",\n                      href: \"#\",\n                      onClick: handleAddImage,\n                      children: \"Add Image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 19\n                }, this), titles.map((title, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    children: [\"Additional Title \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: title,\n                    onChange: e => handleChange(index, 'title', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger mt-2\",\n                    onClick: () => handleRemove(index, 'title'),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 21\n                }, this)), descriptions.map((description, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    children: [\"Description \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    className: \"form-control\",\n                    rows: \"2\",\n                    value: description,\n                    onChange: e => handleChange(index, 'description', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger mt-2\",\n                    onClick: () => handleRemove(index, 'description'),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 21\n                }, this)), links.map((link, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    children: [\"Link \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"url\",\n                    className: \"form-control\",\n                    value: link,\n                    onChange: e => handleChange(index, 'link', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger mt-2\",\n                    onClick: () => handleRemove(index, 'link'),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 21\n                }, this)), images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    children: [\"Image \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    className: \"form-control\",\n                    onChange: e => handleImageChange(index, e.target.files[0])\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger mt-2\",\n                    onClick: () => handleRemove(index, 'image'),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-success\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '30%',\n            position: 'sticky',\n            top: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              height: '667px',\n              maxWidth: '375px',\n              margin: 'auto',\n              border: '16px solid #e7e7e7',\n              borderRadius: '40px',\n              backgroundColor: '#fff',\n              overflow: 'hidden'\n            },\n            children: htmlContent ? /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: htmlContent\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No content to preview.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 435,\n    columnNumber: 5\n  }, this);\n};\n_s(Edit, \"21MzGvHLxKB5NBfcMaYOiSnwFdw=\");\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Edit","_s","htmlContent","setHtmlContent","templateName","setTemplateName","slug","setSlug","title","setTitle","titles","setTitles","descriptions","setDescriptions","links","setLinks","images","setImages","currentUrl","window","location","href","urlParams","URLSearchParams","search","templateFromUrl","get","fetchHtmlContent","response","fetch","ok","html","text","console","error","statusText","handleSubmit","e","preventDefault","contentArray","forEach","t","push","type","data","d","l","img","formData","template","log","submitUrl","method","headers","body","JSON","stringify","json","updatedHtmlResponse","updatedHtml","handleAddTitle","handleAddDescription","handleAddLink","handleAddImage","handleChange","index","value","map","i","handleImageChange","file","handleRemove","filter","_","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gap","width","paddingRight","overflowY","maxHeight","onSubmit","htmlFor","id","onChange","target","required","onClick","description","rows","link","image","files","position","top","height","maxWidth","margin","border","borderRadius","backgroundColor","overflow","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/muskanagarwal/Desktop/qrfrontendmain-main/src/components/pages/TemplateSelector.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// const EditTemplate = () => {\n//   const [fileUrl, setFileUrl] = useState('');\n//   const [brandTitle, setBrandTitle] = useState('');\n//   const [slug, setSlug] = useState('');\n\n//   const [titles, setTitles] = useState([]);\n//   const [descriptions, setDescriptions] = useState([]);\n//   const [links, setLinks] = useState([]);\n//   const [images, setImages] = useState([]);\n\n//   const [htmlContent, setHtmlContent] = useState(''); // For the preview\n\n//   useEffect(() => {\n//     const urlParams = new URLSearchParams(window.location.search);\n//     const templateNameParam = urlParams.get('templateName');\n//     if (templateNameParam) {\n//       setFileUrl(`http://localhost:8000/api/default/${templateNameParam}`);\n\n//       // Fetch existing HTML content\n//       const fetchHtmlContent = async () => {\n//         try {\n//           const response = await fetch(`http://localhost:8000/api/default/${templateNameParam}`);\n//           if (response.ok) {\n//             const html = await response.text();\n//             setHtmlContent(html);\n//           } else {\n//             console.error('Error fetching HTML content:', response.statusText);\n//           }\n//         } catch (error) {\n//           console.error('Error fetching HTML content:', error);\n//         }\n//       };\n//       fetchHtmlContent();\n//     }\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n  \n//     // Extract the template name from the URL\n//     const urlParams = new URLSearchParams(window.location.search);\n//     const templateName = urlParams.get('templateName');\n  \n//     if (!templateName) {\n//       alert('Template name is missing in the URL!');\n//       return;\n//     }\n  \n//     // Construct the contentArray based on form inputs\n//     const contentArray = [\n//       ...titles.map((t) => ({ type: 'text', data: t })),\n//       ...descriptions.map((d) => ({ type: 'text', data: d })),\n//       ...links.map((l) => ({ type: 'link', data: l })),\n//       ...images.map((img) => (img ? { type: 'image', data: img } : null)).filter(Boolean), // Exclude null/undefined images\n//     ];\n  \n//     // Prepare the form data in the structure expected by the backend\n//     const formData = {\n//       title: brandTitle,\n//       slug: slug.toLowerCase().replace(/ /g, '-'), // Ensure slug is URL-friendly\n//       template: templateName,                     // Pass the template name from the URL\n//       contentArray,                               // Dynamic content array\n//     };\n  \n//     console.log('Form Data:', formData); // Debugging: Log the form data\n  \n//     // Submit the form data to the API\n//     try {\n//       const response = await fetch('http://localhost:8000/api/create', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json', // Specify JSON content type\n//         },\n//         body: JSON.stringify(formData), // Send the form data as JSON\n//       });\n  \n//       if (response.ok) {\n//         const data = await response.json();\n//         console.log('Form submitted successfully:', data);\n  \n//         // Fetch and update the HTML content for preview using the new slug\n//         const updatedHtmlResponse = await fetch(`http://localhost:8000/api/get/${slug}`);\n//         if (updatedHtmlResponse.ok) {\n//           const updatedHtml = await updatedHtmlResponse.text();\n//           setHtmlContent(updatedHtml);\n//         } else {\n//           console.error('Error fetching updated HTML content:', updatedHtmlResponse.statusText);\n//         }\n//       } else {\n//         console.error('Error submitting form:', response.statusText);\n//       }\n//     } catch (error) {\n//       console.error('Error submitting form:', error);\n//     }\n//   };\n  \n\n//   const handleAdd = (type) => {\n//     switch (type) {\n//       case 'title':\n//         setTitles([...titles, '']);\n//         break;\n//       case 'description':\n//         setDescriptions([...descriptions, '']);\n//         break;\n//       case 'link':\n//         setLinks([...links, '']);\n//         break;\n//       case 'image':\n//         setImages([...images, '']);\n//         break;\n//       default:\n//         break;\n//     }\n//   };\n\n//   const handleChange = (index, field, value) => {\n//     switch (field) {\n//       case 'title':\n//         setTitles(titles.map((t, i) => (i === index ? value : t)));\n//         break;\n//       case 'description':\n//         setDescriptions(descriptions.map((d, i) => (i === index ? value : d)));\n//         break;\n//       case 'link':\n//         setLinks(links.map((l, i) => (i === index ? value : l)));\n//         break;\n//       case 'image':\n//         setImages(images.map((img, i) => (i === index ? value : img)));\n//         break;\n//       default:\n//         break;\n//     }\n//   };\n\n//   const handleRemove = (index, field) => {\n//     switch (field) {\n//       case 'title':\n//         setTitles(titles.filter((_, i) => i !== index));\n//         break;\n//       case 'description':\n//         setDescriptions(descriptions.filter((_, i) => i !== index));\n//         break;\n//       case 'link':\n//         setLinks(links.filter((_, i) => i !== index));\n//         break;\n//       case 'image':\n//         setImages(images.filter((_, i) => i !== index));\n//         break;\n//       default:\n//         break;\n//     }\n//   };\n\n//   return (\n//     <div className=\"page-content\">\n//       <div className=\"page-title-box\">\n//         <div className=\"container-fluid\">\n//           <div className=\"row align-items-center\">\n//             <div className=\"col-sm-6\">\n//               <div className=\"page-title\">\n//                 <h4>Edit Template</h4>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"container-fluid\">\n//         <div className=\"page-content-wrapper\" style={{ display: 'flex', gap: '20px' }}>\n//           {/* Left Side: Form */}\n//           <div style={{ width: 'calc(60% + 10px)', paddingRight: '5%', overflowY: 'auto', maxHeight: '80vh' }}>\n//             <div className=\"card\">\n//               <div className=\"card-body\">\n//                 <form onSubmit={handleSubmit}>\n//                   <div className=\"mb-3\">\n//                     <label htmlFor=\"brandTitle\" className=\"form-label\">Title</label>\n//                     <input\n//                       type=\"text\"\n//                       id=\"brandTitle\"\n//                       className=\"form-control\"\n//                       value={brandTitle}\n//                       onChange={(e) => setBrandTitle(e.target.value)}\n//                       required\n//                     />\n//                   </div>\n\n//                   <div className=\"mb-3\">\n//                     <label htmlFor=\"slug\" className=\"form-label\">Slug</label>\n//                     <input\n//                       type=\"text\"\n//                       id=\"slug\"\n//                       className=\"form-control\"\n//                       value={slug}\n//                       onChange={(e) => setSlug(e.target.value)}\n//                       required\n//                     />\n//                   </div>\n\n//                   {/* Add Content Buttons */}\n//                   <div className=\"btn-group me-1 mt-1\">\n//                     <button\n//                       type=\"button\"\n//                       className=\"btn btn-success dropdown-toggle\"\n//                       data-bs-toggle=\"dropdown\"\n//                       aria-haspopup=\"true\"\n//                       aria-expanded=\"false\"\n//                     >\n//                       Add Content <i className=\"mdi mdi-chevron-down\"></i>\n//                     </button>\n//                     <div className=\"dropdown-menu\">\n//                       <button className=\"dropdown-item\" type=\"button\" onClick={() => handleAdd('title')}>Add Title</button>\n//                       <button className=\"dropdown-item\" type=\"button\" onClick={() => handleAdd('description')}>Add Description</button>\n//                       <button className=\"dropdown-item\" type=\"button\" onClick={() => handleAdd('link')}>Add Link</button>\n//                       <button className=\"dropdown-item\" type=\"button\" onClick={() => handleAdd('image')}>Add Image</button>\n//                     </div>\n//                   </div>\n\n//                   {/* Dynamically Render Inputs */}\n//                   {titles.map((title, index) => (\n//                     <div key={index} className=\"mb-3\">\n//                       <label htmlFor={`title-${index}`} className=\"form-label\">Title {index + 1}</label>\n//                       <input\n//                         type=\"text\"\n//                         id={`title-${index}`}\n//                         className=\"form-control\"\n//                         value={title}\n//                         onChange={(e) => handleChange(index, 'title', e.target.value)}\n//                       />\n//                       <button\n//                         type=\"button\"\n//                         className=\"btn btn-danger mt-2\"\n//                         onClick={() => handleRemove(index, 'title')}\n//                       >\n//                         Remove Title\n//                       </button>\n//                     </div>\n//                   ))}\n\n//                   <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n//                 </form>\n//               </div>\n//             </div>\n//           </div>\n\n//           {/* Right Side: Mobile Preview */}\n//           <div\n//             style={{\n//               width: '30%',\n//               position: 'sticky',\n//               top: '20px',\n//               height: 'auto',\n//               maxHeight: '90vh',\n//             }}\n//           >\n//             <div\n//               style={{\n//                 width: '100%',\n//                 height: '667px',\n//                 maxWidth: '375px',\n//                 margin: 'auto',\n//                 border: '16px solid #e7e7e7',\n//                 borderRadius: '40px',\n//                 boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n//                 backgroundColor: '#fff',\n//                 overflow: 'hidden',\n//               }}\n//             >\n//               {htmlContent ? (\n//                 <iframe\n//                   srcDoc={htmlContent}\n//                   width=\"100%\"\n//                   height=\"100%\"\n//                   style={{ border: 'none' }}\n//                   title=\"Mobile Template Preview\"\n//                 />\n//               ) : (\n//                 <p style={{ textAlign: 'center', color: '#999' }}>No template selected. Upload or select a template to preview.</p>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EditTemplate;\n\n\nimport React, { useState, useEffect } from 'react';\n\nconst Edit = () => {\n  const [htmlContent, setHtmlContent] = useState('');\n  const [templateName, setTemplateName] = useState('');\n  const [slug, setSlug] = useState('');\n  const [title, setTitle] = useState('');\n  const [titles, setTitles] = useState([]);\n  const [descriptions, setDescriptions] = useState([]);\n  const [links, setLinks] = useState([]);\n  const [images, setImages] = useState([]);\n\n  // Extract template name from URL\n  useEffect(() => {\n    const currentUrl = window.location.href;\n    const urlParams = new URLSearchParams(window.location.search);\n    const templateFromUrl = urlParams.get('templateName');  // Extract 'templateName' from query string\n    setTemplateName(templateFromUrl);\n\n    const fetchHtmlContent = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/get/${templateFromUrl}`);\n        if (response.ok) {\n          const html = await response.text();\n          setHtmlContent(html);\n        } else {\n          console.error('Error fetching HTML content:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching HTML content:', error);\n      }\n    };\n\n    if (templateFromUrl) {\n      fetchHtmlContent();\n    }\n  }, []);\n\n  // Form Handlers\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Prepare the contentArray based on the form inputs\n    const contentArray = [];\n\n    titles.forEach((t) => contentArray.push({ type: 'text', data: t }));\n    descriptions.forEach((d) => contentArray.push({ type: 'text', data: d }));\n    links.forEach((l) => contentArray.push({ type: 'link', data: l }));\n    images.forEach((img) => {\n      if (img) {\n        contentArray.push({ type: 'image', data: img });\n      }\n    });\n\n    // Prepare the form data to match the API structure\n    const formData = {\n      title,\n      slug,\n      template: templateName,  // Using the templateName from the URL\n      contentArray,\n    };\n\n    console.log(formData);\n\n    // Determine the submit URL dynamically based on templateName\n    const submitUrl = `http://localhost:8000/api/default/${templateName}`;\n\n    // Sending data to the backend\n    try {\n      const response = await fetch(submitUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),  // Send the structured formData\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Form submitted successfully:', data);\n\n        // After successful submission, update the HTML content in the mobile frame using the new slug\n        const updatedHtmlResponse = await fetch(`http://localhost:8000/api/get/${slug}`);\n        if (updatedHtmlResponse.ok) {\n          const updatedHtml = await updatedHtmlResponse.text();\n          setHtmlContent(updatedHtml);\n        } else {\n          console.error('Error fetching updated HTML content:', updatedHtmlResponse.statusText);\n        }\n      } else {\n        console.error('Error submitting form:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  };\n\n  const handleAddTitle = () => setTitles([...titles, '']);\n  const handleAddDescription = () => setDescriptions([...descriptions, '']);\n  const handleAddLink = () => setLinks([...links, '']);\n  const handleAddImage = () => setImages([...images, null]);\n\n  const handleChange = (index, type, value) => {\n    switch (type) {\n      case 'title':\n        setTitles(titles.map((t, i) => (i === index ? value : t)));\n        break;\n      case 'description':\n        setDescriptions(descriptions.map((d, i) => (i === index ? value : d)));\n        break;\n      case 'link':\n        setLinks(links.map((l, i) => (i === index ? value : l)));\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleImageChange = (index, file) => {\n    setImages(images.map((img, i) => (i === index ? file : img)));\n  };\n\n  const handleRemove = (index, type) => {\n    switch (type) {\n      case 'title':\n        setTitles(titles.filter((_, i) => i !== index));\n        break;\n      case 'description':\n        setDescriptions(descriptions.filter((_, i) => i !== index));\n        break;\n      case 'link':\n        setLinks(links.filter((_, i) => i !== index));\n        break;\n      case 'image':\n        setImages(images.filter((_, i) => i !== index));\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"page-content\">\n      <div className=\"page-title-box\">\n        <div className=\"container-fluid\">\n          <div className=\"row align-items-center\">\n            <div className=\"col-sm-6\">\n              <div className=\"page-title\">\n                <h4>Template Information Form</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container-fluid\">\n        <div className=\"page-content-wrapper\" style={{ display: 'flex', gap: '10px' }}>\n          {/* Left Side: Form */}\n          <div style={{ width: 'calc(70%)', paddingRight: '5%', overflowY: 'auto', maxHeight: '80vh' }}>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <form onSubmit={handleSubmit}>\n                  {/* Title (Mandatory) */}\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"title\" className=\"form-label\">Title</label>\n                    <input\n                      type=\"text\"\n                      id=\"title\"\n                      className=\"form-control\"\n                      value={title}\n                      onChange={(e) => setTitle(e.target.value)}\n                      required\n                    />\n                  </div>\n\n                  {/* Slug (Mandatory) */}\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"slug\" className=\"form-label\">Slug</label>\n                    <input\n                      type=\"text\"\n                      id=\"slug\"\n                      className=\"form-control\"\n                      value={slug}\n                      onChange={(e) => setSlug(e.target.value)}\n                      required\n                    />\n                  </div>\n\n                  {/* Dropdown Button for Adding Elements */}\n                  <div className=\"btn-group me-1 mt-1\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-success dropdown-toggle\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                    >\n                      Add Element <i className=\"mdi mdi-chevron-down\"></i>\n                    </button>\n                    <div className=\"dropdown-menu\">\n                      <a className=\"dropdown-item\" href=\"#\" onClick={handleAddTitle}>\n                        Add Title\n                      </a>\n                      <a className=\"dropdown-item\" href=\"#\" onClick={handleAddDescription}>\n                        Add Description\n                      </a>\n                      <a className=\"dropdown-item\" href=\"#\" onClick={handleAddLink}>\n                        Add Link\n                      </a>\n                      <a className=\"dropdown-item\" href=\"#\" onClick={handleAddImage}>\n                        Add Image\n                      </a>\n                    </div>\n                  </div>\n\n                  {titles.map((title, index) => (\n                    <div key={index} className=\"mb-3\">\n                      <label className=\"form-label\">Additional Title {index + 1}</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={title}\n                        onChange={(e) => handleChange(index, 'title', e.target.value)}\n                      />\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-danger mt-2\"\n                        onClick={() => handleRemove(index, 'title')}\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  ))}\n\n                  {descriptions.map((description, index) => (\n                    <div key={index} className=\"mb-3\">\n                      <label className=\"form-label\">Description {index + 1}</label>\n                      <textarea\n                        className=\"form-control\"\n                        rows=\"2\"\n                        value={description}\n                        onChange={(e) => handleChange(index, 'description', e.target.value)}\n                      />\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-danger mt-2\"\n                        onClick={() => handleRemove(index, 'description')}\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  ))}\n\n                  {links.map((link, index) => (\n                    <div key={index} className=\"mb-3\">\n                      <label className=\"form-label\">Link {index + 1}</label>\n                      <input\n                        type=\"url\"\n                        className=\"form-control\"\n                        value={link}\n                        onChange={(e) => handleChange(index, 'link', e.target.value)}\n                      />\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-danger mt-2\"\n                        onClick={() => handleRemove(index, 'link')}\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  ))}\n\n                  {images.map((image, index) => (\n                    <div key={index} className=\"mb-3\">\n                      <label className=\"form-label\">Image {index + 1}</label>\n                      <input\n                        type=\"file\"\n                        className=\"form-control\"\n                        onChange={(e) => handleImageChange(index, e.target.files[0])}\n                      />\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-danger mt-2\"\n                        onClick={() => handleRemove(index, 'image')}\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  ))}\n\n                  <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n                </form>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Side: Mobile Frame */}\n          <div style={{ width: '30%', position: 'sticky', top: '20px' }}>\n            <div\n              style={{\n                width: '100%',\n                height: '667px',\n                maxWidth: '375px',\n                margin: 'auto',\n                border: '16px solid #e7e7e7',\n                borderRadius: '40px',\n                backgroundColor: '#fff',\n                overflow: 'hidden',\n              }}\n            >\n              {htmlContent ? (\n                <div dangerouslySetInnerHTML={{ __html: htmlContent }} />\n              ) : (\n                <p>No content to preview.</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Edit;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}