{"ast":null,"code":"var _jsxFileName = \"/Users/muskanagarwal/Desktop/qrfrontendmain-main/src/components/pages/QREditor.js\",\n  _s = $RefreshSig$();\n// QREditor.js\nimport React, { useState, useEffect } from 'react';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QREditor({\n  qrCodeUrl,\n  qrId\n}) {\n  _s();\n  const [fgColor, setFgColor] = useState(\"#000000\"); // Foreground color for the barcode\n  const [qrSize, setQrSize] = useState(150); // QR Code size\n\n  useEffect(() => {\n    // Ensure the QR code gets re-rendered whenever any customization changes\n  }, [fgColor, qrSize]);\n\n  // Handle foreground color change (barcode color)\n  const handleFgColorChange = e => setFgColor(e.target.value);\n\n  // Handle QR code size change\n  const handleSizeChange = e => setQrSize(parseInt(e.target.value));\n\n  // Handle download functionality\n  const handleDownload = () => {\n    const canvas = document.getElementById(`custom-qr-${qrId}`);\n    const link = document.createElement(\"a\");\n    link.href = canvas.toDataURL(\"image/png\");\n    link.download = `Customized_QR_${qrId}.png`;\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: [\"Edit QR Code for ID: \", qrId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n            id: `custom-qr-${qrId}`,\n            value: qrCodeUrl // The URL will be passed as a prop\n            ,\n            size: qrSize // QR size will be dynamically set\n            ,\n            bgColor: \"#ffffff\" // Keep the background color white\n            ,\n            fgColor: fgColor // Foreground color (barcode color) based on state\n            ,\n            level: \"H\" // Error correction level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Barcode Color:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: fgColor,\n              onChange: handleFgColorChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"QR Code Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"100\",\n              max: \"300\",\n              value: qrSize,\n              onChange: handleSizeChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success mt-3\",\n          onClick: handleDownload,\n          children: \"Download Customized QR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(QREditor, \"bCgKIn3hSpv12Iy+bq2g3wmkGtc=\");\n_c = QREditor;\nexport default QREditor;\nvar _c;\n$RefreshReg$(_c, \"QREditor\");","map":{"version":3,"names":["React","useState","useEffect","QRCodeCanvas","jsxDEV","_jsxDEV","QREditor","qrCodeUrl","qrId","_s","fgColor","setFgColor","qrSize","setQrSize","handleFgColorChange","e","target","value","handleSizeChange","parseInt","handleDownload","canvas","document","getElementById","link","createElement","href","toDataURL","download","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","size","bgColor","level","type","onChange","min","max","onClick","_c","$RefreshReg$"],"sources":["/Users/muskanagarwal/Desktop/qrfrontendmain-main/src/components/pages/QREditor.js"],"sourcesContent":["// QREditor.js\nimport React, { useState, useEffect } from 'react';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction QREditor({ qrCodeUrl, qrId }) {\n  const [fgColor, setFgColor] = useState(\"#000000\"); // Foreground color for the barcode\n  const [qrSize, setQrSize] = useState(150); // QR Code size\n\n  useEffect(() => {\n    // Ensure the QR code gets re-rendered whenever any customization changes\n  }, [fgColor, qrSize]);\n\n  // Handle foreground color change (barcode color)\n  const handleFgColorChange = (e) => setFgColor(e.target.value);\n\n  // Handle QR code size change\n  const handleSizeChange = (e) => setQrSize(parseInt(e.target.value));\n\n  // Handle download functionality\n  const handleDownload = () => {\n    const canvas = document.getElementById(`custom-qr-${qrId}`);\n    const link = document.createElement(\"a\");\n    link.href = canvas.toDataURL(\"image/png\");\n    link.download = `Customized_QR_${qrId}.png`;\n    link.click();\n  };\n\n  return (\n    <div className=\"page-content\">\n\n    <div className=\"card mt-3\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">Edit QR Code for ID: {qrId}</h5>\n\n        {/* QR Code Display with Customization */}\n        <div className=\"mb-3\">\n          <QRCodeCanvas\n            id={`custom-qr-${qrId}`}\n            value={qrCodeUrl} // The URL will be passed as a prop\n            size={qrSize} // QR size will be dynamically set\n            bgColor=\"#ffffff\" // Keep the background color white\n            fgColor={fgColor} // Foreground color (barcode color) based on state\n            level={\"H\"} // Error correction level\n          />\n        </div>\n\n        {/* Customization Controls */}\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <label>Barcode Color:</label>\n            <input\n              type=\"color\"\n              value={fgColor}\n              onChange={handleFgColorChange}\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"col-md-4\">\n            <label>QR Code Size:</label>\n            <input\n              type=\"number\"\n              min=\"100\"\n              max=\"300\"\n              value={qrSize}\n              onChange={handleSizeChange}\n              className=\"form-control\"\n            />\n          </div>\n        </div>\n\n        {/* Download Button */}\n        <button\n          className=\"btn btn-success mt-3\"\n          onClick={handleDownload}\n        >\n          Download Customized QR\n        </button>\n      </div>\n    </div>\n\n    </div>\n  );\n}\n\nexport default QREditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}